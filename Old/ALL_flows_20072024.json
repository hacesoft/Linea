[
    {
        "id": "6cf0017697520c44",
        "type": "tab",
        "label": "chlazeni FVE",
        "disabled": false,
        "info": "\r\n",
        "env": []
    },
    {
        "id": "7996ac9a8ad2ee7a",
        "type": "tab",
        "label": "Battery Control",
        "disabled": false,
        "info": "//*****************************************************************************\r\n//\r\n// File Name        : Battery Control Node\r\n// Title            : Battery Control Nodes\r\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\r\n// Created          : 21-06-2024, 08:00\r\n// Revised          : 29-06-2024, 21:39\r\n// Version          : 1.00\r\n// Target Platform  : Node-RED\r\n//\r\n// This code is distributed under the GNU Public License\r\n// Vsechny informace jsou zahrnuty pod GPL licenci, pokud není explicitne uveden jiný typ licence.\r\n// Pouzivání techto stránek a produktů ke komerčním �celum lze jen se souhlasem autora.\r\n// Vsechna práva vyhrazena (c) 1997 - 2024 hacesoft.\r\n//\r\n//*****************************************************************************",
        "env": []
    },
    {
        "id": "b986d298710d9da5",
        "type": "tab",
        "label": "SPOT Excess Control",
        "disabled": false,
        "info": "### Auto control according to SPOT prices\r\n\r\n - Tick each 15 minutes (+ 5 sec. delay to be sure to catch the current hour frame at SPOT prices provider).\r\n - Load spot prices from DeltaGreen.\r\n - Evaluate current price according to the treshold. The treshold is stored in flow.spotTresholdPrice (1.05 CZK/kWh by default).\r\n - Turn On/Off the Venus Feeding excess DC PV into grid according the treshold.\r\n\r\n### Manual control \r\n- Just turn On/Off the Venus Feeding excess DC PV into grid according the manual settings.\r\n\r\n### Prerequisites\r\nNode-RED custom libraries:\r\n\r\n. Node-red dashboard\r\n\tnode-red-dashboard\r\n\thttps://flows.nodered.org/node/node-red-dashboard\r\n\t\r\n. cronplus\r\n\tnode-red-contrib-cron-plus\r\n\thttps://flows.nodered.org/node/node-red-contrib-cron-plus\r\n\t\r\n. config\r\n\tnode-red-contrib-config\r\n\thttps://flows.nodered.org/node/node-red-contrib-config\r\n\r\n#### Other used nodes:\r\n. Modern Dark Theme for node-red-dashboard\r\n\thttps://flows.nodered.org/flow/eb9a4d44f72b0755aa3e14055fb3eacb\r\n\r\n-- by Petr Krivanek",
        "env": []
    },
    {
        "id": "dc14bd796219d9ad",
        "type": "tab",
        "label": "GUI + GLOBAL FONCTION",
        "disabled": false,
        "info": "//*****************************************************************************\r\n//\r\n// File Name        : 'GUI_Global_UTIL'\r\n// Title            : GUI a definovani globalní funkce\r\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\r\n// Created          : 14-07-2024, 11:00\r\n// Revised          : 17-07-2024, 20:33\r\n// Version          : 1.11\r\n// Target Platform  : Node-RED\r\n//\r\n// This code is distributed under the GNU Public License\r\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\r\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\r\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\r\n//\r\n//*****************************************************************************\r\n//",
        "env": []
    },
    {
        "id": "f5e086d890235524",
        "type": "group",
        "z": "b986d298710d9da5",
        "name": "GUI",
        "style": {
            "stroke": "#0070c0",
            "label": true
        },
        "nodes": [
            "ad45e2698cf99e24",
            "31e526f3dcbd2b2a",
            "8a79a9c6f5c85868",
            "7a2eeb482b9cbe62",
            "1ae91cfd06369250",
            "908261638ccf1e55",
            "7bc4dfa8ac9f0cb2"
        ],
        "x": 394,
        "y": 199,
        "w": 1172,
        "h": 142
    },
    {
        "id": "5ece208427d51524",
        "type": "group",
        "z": "b986d298710d9da5",
        "name": "Victron Venus settings status monitor",
        "style": {
            "label": true
        },
        "nodes": [
            "e30fb63eea32171a",
            "d4ef1b7263f1f0c7",
            "e206cc31a3e05c0f",
            "d0c4a942cea93b17",
            "bf176b832b69029b",
            "16d87f0ccdd6c314"
        ],
        "x": 634,
        "y": 19,
        "w": 772,
        "h": 162
    },
    {
        "id": "b42fb09a89761abc",
        "type": "group",
        "z": "b986d298710d9da5",
        "name": "Load SPOT price, evaluate the treshold price & set feed DC excess on/off",
        "style": {
            "label": true
        },
        "nodes": [
            "2d331a50b0d61710",
            "d153678c838836aa",
            "16f96aa183feec96",
            "b5253809c21b8037",
            "76540fe7bea2088e",
            "b70c9a8e3f33594d",
            "af6a1b22fa66ca61",
            "64105c5a3b20bb19",
            "ad3b7d4443f6b79e",
            "13ea6ca0b9ca3e03",
            "56dc9731dc569a6e",
            "94da292e68864339",
            "e418a527df65e767",
            "bb98cb7e8515fb25",
            "75ac1831bb5e13e0",
            "a7a9fcb365020e85",
            "76a8d8c71ef25fc8",
            "5ce3d905b124c09d",
            "f96e7d2a877f8124",
            "a434319c79a45492",
            "117c2520b271ab18",
            "9679043aa5a0ea06",
            "676afd925d5b648d",
            "7d7464fe9484e0f6",
            "f7b462f22622136e",
            "5ea652330077301c",
            "fb235672515d3eae",
            "05f5f0a1cc1ee777",
            "7b7b2d74db0945e8",
            "5fa9a82ebed3552f",
            "96deeb8958d5a03f",
            "f4e1cf3a0ee52e37",
            "38b7ec7ee777b4a9",
            "e20437d8bba5aa5e",
            "b759b4c02def5194",
            "cf6ec63e9e803b5c",
            "b4b6f64ea3924b4e"
        ],
        "x": 394,
        "y": 379,
        "w": 1612,
        "h": 902
    },
    {
        "id": "5e730295abd379ae",
        "type": "modbus-client",
        "name": "Cerbo GX",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": false,
        "tcpHost": "192.168.50.200",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": false,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": false,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "f3a8a67ff0904e39",
        "type": "ui_tab",
        "name": "FVE",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6bdf3420903b72e3",
        "type": "ui_group",
        "name": "Řízení přetoků",
        "tab": "f3a8a67ff0904e39",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "7d718c13f8419912",
        "type": "ui_group",
        "name": "SPOT",
        "tab": "f3a8a67ff0904e39",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b1eb05edab318eb0",
        "type": "ui_group",
        "name": "ESS",
        "tab": "f3a8a67ff0904e39",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "eff8c2fb7917b0ab",
        "type": "ui_group",
        "name": "Real Data",
        "tab": "f3a8a67ff0904e39",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3ce9a078cfe7aa3e",
        "type": "config-vrm-api",
        "name": "linea"
    },
    {
        "id": "567d8fae.98148",
        "type": "ui_tab",
        "name": "Realtime Power",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "18637dcfe1e79007",
        "type": "ui_group",
        "name": "Předpověd",
        "tab": "567d8fae.98148",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4602184db8ee1326",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 50,
                "sy": 30,
                "gx": 6,
                "gy": 0,
                "cx": 0,
                "cy": 0,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "87c32be49619e588",
        "type": "config-vrm-api",
        "name": "VRM"
    },
    {
        "id": "588e29fa66428510",
        "type": "ui_spacer",
        "z": "6cf0017697520c44",
        "d": true,
        "name": "spacer",
        "group": "eff8c2fb7917b0ab",
        "order": 19,
        "width": "6",
        "height": "1"
    },
    {
        "id": "ba2fc442e60c2c6d",
        "type": "ui_spacer",
        "z": "6cf0017697520c44",
        "name": "spacer",
        "group": "eff8c2fb7917b0ab",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "1a3df732a5c961c1",
        "type": "ui_spacer",
        "z": "6cf0017697520c44",
        "name": "spacer",
        "group": "eff8c2fb7917b0ab",
        "order": 12,
        "width": 6,
        "height": 1
    },
    {
        "id": "753058c2a98c94db",
        "type": "ui_spacer",
        "z": "6cf0017697520c44",
        "name": "spacer",
        "group": "7d718c13f8419912",
        "order": 3,
        "width": 6,
        "height": 1
    },
    {
        "id": "3a6229e0e69e6f41",
        "type": "ui_spacer",
        "z": "6cf0017697520c44",
        "name": "spacer",
        "group": "b1eb05edab318eb0",
        "order": 4,
        "width": 6,
        "height": 1
    },
    {
        "id": "b53e5c5a180d58f3",
        "type": "ui_spacer",
        "z": "6cf0017697520c44",
        "name": "spacer",
        "group": "b1eb05edab318eb0",
        "order": 8,
        "width": 6,
        "height": 1
    },
    {
        "id": "687ea5972718513e",
        "type": "ui_spacer",
        "z": "6cf0017697520c44",
        "name": "spacer",
        "group": "b1eb05edab318eb0",
        "order": 11,
        "width": 6,
        "height": 1
    },
    {
        "id": "963735aa2c2813dd",
        "type": "function",
        "z": "6cf0017697520c44",
        "name": "MPTT",
        "func": "//*****************************************************************************\n//\n// File Name        : 'Chlazeni MPTT trakeru'\n// Title            : Cooling of Trackers in the Rack\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 21-10-2023, 11:00\n// Revised          : 06-07-2024, 10:27\n// Version          : 1.3\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\n//definice globalních funkci\nconst fSendUrl = global.get('fSendUrl');\n\nif (fSendUrl) {\n    const nRelayNumber = 0;\n    const sIpAddress = \"192.168.11.7\";\n    let sTurn = \"off\";  // Výchozí hodnota\n    let nTurn = 0;  // Výchozí hodnota\n    let n_trigger_MPTT = 1200; // defaultní hodnota triggeru\n    let _url = \"\";\n\n    //Načtení vstupních dat\n    const _general_stop = msg.payload._general_stop;// general stop\n\n    // Načteni globálních dat\n    const pvPower = global.get(\"pvPower\") || 0; // Hodnota z registru 819 \n\n    if (_general_stop == true){\n        sTurn = \"off\";\n        nTurn = 0;\n    }else{// Zkontroluj, zda pvPower je větší nebo rovno 1200 a nastav sTurn podle toho\n        if (pvPower >= n_trigger_MPTT) {\n            sTurn = \"on\";\n            nTurn = 1;\n        } else {\n            sTurn = \"off\";\n            nTurn = 0;\n        }\n    }\n\n    // Vytvořit URL na základě hodnoty sTurn\n    _url = fSendUrl(sIpAddress, nRelayNumber, sTurn);\n\n    // Nastavit payload zprávy\n    msg.payload = {\n        _url_m: _url,\n        pvPower: pvPower,\n        nTurn: nTurn,\n        sTurn: sTurn + \" MPTT\"\n    };\n\n    // Debug výpisy\n    if (debug) {\n        node.warn(\"pvPower: \" + pvPower);\n        node.warn(\"sTurn: \" + sTurn);\n        node.warn(\"URL: \" + _url);\n    }\n    } else {\n    node.error(\"Globální funkce nebyly nalezeny. <- FORM CHLAZENI FVE -- MPTT\");\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 320,
        "wires": [
            [
                "232971085f517d96",
                "336752599f366b33",
                "c71d738693128266",
                "d705678e916ee6db"
            ]
        ]
    },
    {
        "id": "232971085f517d96",
        "type": "debug",
        "z": "6cf0017697520c44",
        "name": "_url_m",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload._url_m",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 830,
        "y": 360,
        "wires": []
    },
    {
        "id": "adc258f90f469e5a",
        "type": "function",
        "z": "6cf0017697520c44",
        "name": "OFF_MPTT",
        "func": "//*****************************************************************************\n//\n// File Name        : 'Chlazeni MPTT trakeru'\n// Title            : Cooling of Trackers in the Rack\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 19-12-2023, 09:51\n// Revised          : 19-12-2023, 09:52\n// Version          : 1.11\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\nmsg.payload = \"http://192.168.11.7/relay/0?turn=off\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 420,
        "wires": [
            [
                "84042b69f9b84c81"
            ]
        ]
    },
    {
        "id": "4b426567f09395d4",
        "type": "function",
        "z": "6cf0017697520c44",
        "name": "ON_MPTT",
        "func": "//*****************************************************************************\n//\n// File Name        : 'Chlazeni MPTT trakeru'\n// Title            : Cooling of Trackers in the Rack\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 19-12-2023, 09:51\n// Revised          : 19-12-2023, 09:52\n// Version          : 1.11\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\nmsg.payload = \"http://192.168.11.7/relay/0?turn=on\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 460,
        "wires": [
            [
                "84042b69f9b84c81"
            ]
        ]
    },
    {
        "id": "83fdb50b60d278d0",
        "type": "ui_button",
        "z": "6cf0017697520c44",
        "d": true,
        "name": "",
        "group": "eff8c2fb7917b0ab",
        "order": 21,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "OFF Ventilator MPTT",
        "tooltip": "OFF Ventilator MPTT",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 360,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6b19eba0e99cc60b",
        "type": "ui_button",
        "z": "6cf0017697520c44",
        "d": true,
        "name": "",
        "group": "eff8c2fb7917b0ab",
        "order": 20,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "ON Ventilator MPTT",
        "tooltip": "ON Ventilator MPTT",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 360,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "5fccbb56b9c0a1e6",
        "type": "inject",
        "z": "6cf0017697520c44",
        "name": "START 1 minuta",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "*/1 4-21 * * *",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "963735aa2c2813dd",
                "af0ca4755bf9af8e"
            ]
        ]
    },
    {
        "id": "84042b69f9b84c81",
        "type": "http request",
        "z": "6cf0017697520c44",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1210,
        "y": 300,
        "wires": [
            [
                "3416fd3bc02de1c1",
                "08ae0e51d9c5db3d"
            ]
        ]
    },
    {
        "id": "9b2cf902516106b9",
        "type": "function",
        "z": "6cf0017697520c44",
        "name": "CHANGER",
        "func": "//*****************************************************************************\n//\n// File Name        : 'Chlazeni_CHANGERs'\n// Title            : Cooling of Changers in the Rack\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 21-10-2023, 11:00\n// Revised          : 06-07-2024, 10:27\n// Version          : 1.4\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\n//definice globalních funkci\nconst fSendUrl = global.get('fSendUrl');\nconst nConvertSignetUnsignet = global.get('nConvertSignetUnsignet');\n\nif (fSendUrl && nConvertSignetUnsignet) {\n\n    const nRelayNumber = 0;\n    const sIpAddress = \"192.168.11.9\";\n    let sTurn = \"off\";  // Výchozí hodnota\n    let nTurn = 0;  // Výchozí hodnota\n    let n_trigger_Changer = 700; // defaultní hodnota triggeru\n    let _url = \"\";\n\n    //Načtení vstupních dat\n    const _general_stop = msg.payload._general_stop;// general stop\n\n    // Definice fazi AC LOAD\n    const phase1 = global.get(\"phase1\") || 0; // Hodnota z registru 817\n    const phase2 = global.get(\"phase2\") || 0;  // Hodnota z registru 818\n    const phase3 = global.get(\"phase3\") || 0;;  // Hodnota z registru 819\n\n    // Definice Gridu\n    const grid1 = global.get(\"grid1\") || 0; // Hodnota z registru 811\n    const grid2 = global.get(\"grid2\") || 0;  // Hodnota z registru 812\n    const grid3 = global.get(\"grid3\") || 0;;  // Hodnota z registru 813\n\n    // Spočítat celkový odběr AC zátěže\n    let totalACLoad = phase1 + phase2 + phase3;\n\n    //Spočítat celkový odber nebo dodávku do GRIDu\n    let _ABS_totalGrid = Math.abs(grid1 + grid2 + grid3); //vzdy kladna hodnota\n\n    if (_general_stop == true){\n        sTurn = \"off\";\n        nTurn = 0;\n    }else{// Zkontroluj, zda totalACLoad nebo  _ABS_totalGrid je větší jako n_trigger_Changer a podle toho nastav sTurn.\n        if (totalACLoad > n_trigger_Changer || _ABS_totalGrid > n_trigger_Changer) {\n            sTurn = \"on\";\n            nTurn = 1;\n        } else {\n            sTurn = \"off\";\n            nTurn = 0;\n        }\n    }\n\n    // Vytvořit URL na základě hodnoty sTurn\n    _url = fSendUrl(sIpAddress, nRelayNumber, sTurn);\n\n    // Nastavit payload zprávy\n    msg.payload = {\n        _url_ch: _url,\n        _ABS_totalGrid: _ABS_totalGrid,\n        totalACLoad: totalACLoad,\n        sTurn: sTurn + \" CHANGER\",\n        nTurn: nTurn\n    };\n\n    // Debug výpisy\n    if (debug) {\n        node.warn(\"totalACLoad: \" + totalACLoad);\n        node.warn(\"sTurn: \" + sTurn);\n        node.warn(\"URL: \" + _url);\n        node.warn(\"_ABS_totalGrid: \" + _ABS_totalGrid);\n    }\n    } else {\n    node.error(\"Globální funkce nebyly nalezeny. <- FORM CHLAZENI FVE -- CHANGER\");\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 280,
        "wires": [
            [
                "290dcec4e2dbed6d",
                "70a281e12c852b87",
                "ee6410f23d9f9867",
                "2cd8f1d0601931db",
                "0113661ddfe281dc"
            ]
        ]
    },
    {
        "id": "3416fd3bc02de1c1",
        "type": "debug",
        "z": "6cf0017697520c44",
        "name": "debug 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1400,
        "y": 240,
        "wires": []
    },
    {
        "id": "e88d7e3953ab230d",
        "type": "inject",
        "z": "6cf0017697520c44",
        "name": "FAN ALL STOP",
        "props": [
            {
                "p": "payload._general_stop",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "x": 220,
        "y": 320,
        "wires": [
            [
                "963735aa2c2813dd",
                "af0ca4755bf9af8e"
            ]
        ]
    },
    {
        "id": "dcf18630a930ca56",
        "type": "function",
        "z": "6cf0017697520c44",
        "name": "OFF_CHANGERs",
        "func": "//*****************************************************************************\n//\n// File Name        : 'Chlazeni MPTT trakeru'\n// Title            : Cooling of Trackers in the Rack\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2023\n// Created          : 19-12-2023, 09:51\n// Revised          : 19-12-2023, 09:52\n// Version          : 1.11\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\nmsg.payload  = \"http://192.168.11.9/relay/0?turn=off\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 160,
        "wires": [
            [
                "84042b69f9b84c81"
            ]
        ]
    },
    {
        "id": "8276fff68367b447",
        "type": "function",
        "z": "6cf0017697520c44",
        "name": "ON_CHANGERs",
        "func": "//*****************************************************************************\n//\n// File Name        : 'Chlazeni MPTT trakeru'\n// Title            : Cooling of Trackers in the Rack\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2023\n// Created          : 19-12-2023, 09:51\n// Revised          : 19-12-2023, 09:52\n// Version          : 1.11\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\nmsg.payload  = \"http://192.168.11.9/relay/0?turn=on\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 200,
        "wires": [
            [
                "84042b69f9b84c81"
            ]
        ]
    },
    {
        "id": "336752599f366b33",
        "type": "debug",
        "z": "6cf0017697520c44",
        "name": "sTurn",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.sTurn",
        "targetType": "msg",
        "statusVal": "payload.sTurn ",
        "statusType": "auto",
        "x": 830,
        "y": 420,
        "wires": []
    },
    {
        "id": "c71d738693128266",
        "type": "debug",
        "z": "6cf0017697520c44",
        "name": "pvPower",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.pvPower",
        "targetType": "msg",
        "statusVal": "payload.pvPower",
        "statusType": "auto",
        "x": 840,
        "y": 480,
        "wires": []
    },
    {
        "id": "290dcec4e2dbed6d",
        "type": "debug",
        "z": "6cf0017697520c44",
        "name": "_url_ch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload._url_ch",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 840,
        "y": 220,
        "wires": []
    },
    {
        "id": "70a281e12c852b87",
        "type": "debug",
        "z": "6cf0017697520c44",
        "name": "sTurn",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.sTurn",
        "targetType": "msg",
        "statusVal": "payload.sTurn ",
        "statusType": "auto",
        "x": 830,
        "y": 160,
        "wires": []
    },
    {
        "id": "ee6410f23d9f9867",
        "type": "debug",
        "z": "6cf0017697520c44",
        "name": "totalACLoad",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.totalACLoad",
        "targetType": "msg",
        "statusVal": "payload.pvPower",
        "statusType": "auto",
        "x": 850,
        "y": 100,
        "wires": []
    },
    {
        "id": "2cd8f1d0601931db",
        "type": "function",
        "z": "6cf0017697520c44",
        "name": "CopyOnChange_URL_ch",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A\n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 16-07-2024, 04:40\n// Revised          : 19-07-2024, 16:51\n// Version          : 1.01\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\nconst nWaitLoop = 20; //kolik cyklu cekat\n\n// Inicializace kontextových proměnných\nlet nCopyOnChange_url_ch = context.get('nCopyOnChange_url_ch') || \"\";\nlet nWaitLoop_ch = context.get('nWaitLoop_ch') || 0;\nlet nStopLoop_ch = context.get('nStopLoop_ch') || false;\n\n// Načtení vstupních dat\nconst _url_ch = msg.payload && msg.payload._url_ch ? msg.payload._url_ch : \"\";\nconst nTurn = msg.payload && msg.payload.nTurn !== undefined ? msg.payload.nTurn : false;\n\n// Zvýšení nWaitLoop_ch\nnWaitLoop_ch += 1;\ncontext.set('nWaitLoop_ch', nWaitLoop_ch);\n\n// Debug výpisy\nif (debug) {\n    node.warn(\"_url_ch: \" + _url_ch);\n    node.warn(\"nCopyOnChange_url_ch: \" + nCopyOnChange_url_ch);\n    node.warn(\"nWaitLoop_ch: \" + nWaitLoop_ch);\n    node.warn(\"nWaitLoop: \" + nWaitLoop);\n    node.warn(\"nTurn: \" + nTurn);\n    node.warn(\"nStopLoop_ch: \" + nStopLoop_ch);\n}\n\n// Porovnat aktuální hodnotu s poslední odeslanou hodnotou a nebo pri nWaitLoop a nTurn == false (20x po sobe prislo potvrzenivypnuti ventilatoru), provest vypnuti ventilatoru\nif (_url_ch != nCopyOnChange_url_ch || (nWaitLoop_ch > nWaitLoop && nTurn == false)) {//vypinani ventilatoru\n    if (nWaitLoop_ch > nWaitLoop && nTurn == false) {//20x posobe prislo stop, tak vypnout ventilator\n        // pri nWaitLoop a nTurn == false (20x po sobe prislo potvrzenivypnuti ventilatoru), provest vypnuti ventilatoru\n        if (nStopLoop_ch == false) {;\n            context.set('nCopyOnChange_url_ch', _url_ch);\n            context.set('nStopLoop_ch', true);\n            msg.payload = _url_ch; // Odeslat zprávu\n            return msg;\n        } else {//toto by nikdy nemelo nastat\n            return null; // Vrátit null, aby zpráva nebyla odeslána\n        }\n    } else {\n\n        if (nTurn == true) {\n            context.set('nCopyOnChange_url_ch', _url_ch);\n            context.set('nWaitLoop_ch', 0);\n            context.set('nStopLoop_ch', false);\n            msg.payload = _url_ch; // Odeslat zprávu\n            return msg;\n        }\n        else{//neprislo po sobe 20x stop fan\n            return null; // Vrátit null, aby zpráva nebyla odeslána\n        }\n    }\n\n} else {//zapnuty ventilator\n    if (nTurn == true) {\n        context.set('nCopyOnChange_url_ch', _url_ch);\n        context.set('nWaitLoop_ch', 0);\n        context.set('nStopLoop_ch', false);\n        msg.payload = _url_ch; // Odeslat zprávu\n        return msg;\n    } else {//toto by nikdy nemelo nastat\n        return null; // Vrátit null, aby zpráva nebyla odeslána\n        }\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 280,
        "wires": [
            [
                "84042b69f9b84c81"
            ]
        ]
    },
    {
        "id": "d705678e916ee6db",
        "type": "function",
        "z": "6cf0017697520c44",
        "name": "CopyOnChange_URL_m",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A\n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 16-07-2024, 04:40\n// Revised          : 16-07-2024, 16:01\n// Version          : 1.00\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\nconst nWaitLoop = 20; //kolik cyklu cekat\n\n// Inicializace kontextových proměnných\nlet nCopyOnChange_url_m = context.get('nCopyOnChange_url_m') || \"\";\nlet nWaitLoop_m = context.get('nWaitLoop_m') || 0;\nlet nStopLoop_m = context.get('nStopLoop_m') || false;\n\n// Načtení vstupních dat\nconst _url_m = msg.payload && msg.payload._url_m ? msg.payload._url_m : \"\";\nconst nTurn = msg.payload && msg.payload.nTurn !== undefined ? msg.payload.nTurn : false;\n\n// Zvýšení nWaitLoop_ch\nnWaitLoop_m += 1;\ncontext.set('nWaitLoop_m', nWaitLoop_m);\n\n// Debug výpisy\nif (debug) {\n    node.warn(\"_url_m: \" + _url_m);\n    node.warn(\"nCopyOnChange_url_m: \" + nCopyOnChange_url_m);\n    node.warn(\"nWaitLoop_m: \" + nWaitLoop_m);\n    node.warn(\"nWaitLoop: \" + nWaitLoop);\n    node.warn(\"nTurn: \" + nTurn);\n    node.warn(\"nStopLoop_mh: \" + nStopLoop_m);\n}\n\n// Porovnat aktuální hodnotu s poslední odeslanou hodnotou a nebo pri nWaitLoop a nTurn == false (20x po sobe prislo potvrzenivypnuti ventilatoru), provest vypnuti ventilatoru\nif (_url_m != nCopyOnChange_url_m || (nWaitLoop_m > nWaitLoop && nTurn == false)) {//vypinani ventilatoru\n    if (nWaitLoop_m > nWaitLoop && nTurn == false) {//20x posobe prislo stop, tak vypnout ventilator\n        // pri nWaitLoop a nTurn == false (20x po sobe prislo potvrzenivypnuti ventilatoru), provest vypnuti ventilatoru\n        if (nStopLoop_m == false) {;\n            context.set('nCopyOnChange_url_m', _url_m);\n            context.set('nStopLoop_m', true);\n            msg.payload = _url_m; // Odeslat zprávu\n            return msg;\n        } else {//toto by nikdy nemelo nastat\n            return null; // Vrátit null, aby zpráva nebyla odeslána\n        }\n    } else {\n\n        if (nTurn == true) {\n            context.set('nCopyOnChange_url_m', _url_m);\n            context.set('nWaitLoop_m', 0);\n            context.set('nStopLoop_m', false);\n            msg.payload = _url_m; // Odeslat zprávu\n            return msg;\n        }\n        else{//neprislo po sobe 20x stop fan\n            return null; // Vrátit null, aby zpráva nebyla odeslána\n        }\n    }\n\n} else {//zapnuty ventilator\n    if (nTurn == true) {\n        context.set('nCopyOnChange_url_m', _url_m);\n        context.set('nWaitLoop_m', 0);\n        context.set('nStopLoop_m', false);\n        msg.payload = _url_m; // Odeslat zprávu\n        return msg;\n    } else {//toto by nikdy nemelo nastat\n        return null; // Vrátit null, aby zpráva nebyla odeslána\n        }\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 320,
        "wires": [
            [
                "84042b69f9b84c81"
            ]
        ]
    },
    {
        "id": "0113661ddfe281dc",
        "type": "debug",
        "z": "6cf0017697520c44",
        "name": "_ABS_totalGrid",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload._ABS_totalGrid",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 860,
        "y": 40,
        "wires": []
    },
    {
        "id": "8579b5149bcc953d",
        "type": "inject",
        "z": "6cf0017697520c44",
        "name": "Nouzovy START",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 200,
        "wires": [
            [
                "8276fff68367b447"
            ]
        ]
    },
    {
        "id": "b30112a2ed023059",
        "type": "inject",
        "z": "6cf0017697520c44",
        "name": "Nouzovy STOP",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 160,
        "wires": [
            [
                "dcf18630a930ca56"
            ]
        ]
    },
    {
        "id": "b14b4c17683c173a",
        "type": "inject",
        "z": "6cf0017697520c44",
        "name": "Nouzovy STOP",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 420,
        "wires": [
            [
                "adc258f90f469e5a"
            ]
        ]
    },
    {
        "id": "c9bf73f8978fc162",
        "type": "inject",
        "z": "6cf0017697520c44",
        "name": "Nouzovy START",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 460,
        "wires": [
            [
                "4b426567f09395d4"
            ]
        ]
    },
    {
        "id": "b4477a4b529c8abd",
        "type": "inject",
        "z": "6cf0017697520c44",
        "d": true,
        "name": "Fan ON",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 420,
        "y": 715,
        "wires": [
            [
                "a3145ac30d14d0bd"
            ]
        ]
    },
    {
        "id": "6bd85fd4a1885fff",
        "type": "inject",
        "z": "6cf0017697520c44",
        "d": true,
        "name": "Fan OFF",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 400,
        "y": 765,
        "wires": [
            [
                "a3145ac30d14d0bd"
            ]
        ]
    },
    {
        "id": "a3145ac30d14d0bd",
        "type": "function",
        "z": "6cf0017697520c44",
        "d": true,
        "name": "Set Fan Status",
        "func": "let fanStatus = msg.payload;\nmsg.payload = fanStatus;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 735,
        "wires": [
            [
                "27199357375366e4"
            ]
        ]
    },
    {
        "id": "27199357375366e4",
        "type": "ui_template",
        "z": "6cf0017697520c44",
        "d": true,
        "group": "eff8c2fb7917b0ab",
        "name": "Fan Status Indicator",
        "order": 22,
        "width": 6,
        "height": 1,
        "format": "<div id=\"indicator-container\"\n    style=\"width: 100%; height: 100%; background-color: var(--background-color); display: flex; align-items: center; justify-content: center;\">\n    <div id=\"indicator\" style=\"width: 20px; height: 20px; border-radius: 50%; background-color: grey;\"></div>\n</div>\n\n<script>\n    (function(scope) {\n        function getCSSVariableValue(variable) {\n            return getComputedStyle(document.documentElement).getPropertyValue(variable).trim();\n        }\n\n        scope.$watch('msg.payload', function(newValue, oldValue) {\n            var indicator = document.getElementById('indicator');\n            if (newValue === true) {\n                indicator.style.backgroundColor = getCSSVariableValue('--color_ind_on');\n            } else {\n                indicator.style.backgroundColor = getCSSVariableValue('--color_ind_off');\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 800,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "08ae0e51d9c5db3d",
        "type": "function",
        "z": "6cf0017697520c44",
        "name": "Process Response",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A\n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 16-07-2024, 04:40\n// Revised          : 16-07-2024, 16:01\n// Version          : 1.00\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\n// Kontrola statusCode\nif (msg.statusCode !== 200) {\n    return null; // Pokud není statusCode 200, vrátíme null a ukončíme zpracování\n}\n\nconst response = JSON.parse(msg.payload);\nlet sURL = msg.responseUrl;\n\n// Ruční zpracování URL pro získání IP adresy a hodnoty 'turn'\nlet ipAddress = sURL.split('/')[2];\nlet turnValue = sURL.includes('turn=on') ? 'on' : 'off';\n\nlet indicatorMsg = {};\n\n// Debugging vstupních dat\nif (debug) {\n    node.warn(\"sURL: \" + sURL);\n    node.warn(\"ipAddress: \" + ipAddress);\n    node.warn(\"turnValue: \" + turnValue);\n}\n\nif (ipAddress === '192.168.11.7') {\n    indicatorMsg = { indicator: 'mptt-fan', status: turnValue, topic: 'update-indicator' };\n} else if (ipAddress === '192.168.11.9') {\n    indicatorMsg = { indicator: 'changer-fan', status: turnValue, topic: 'update-indicator' };\n}\n\nreturn { payload: indicatorMsg };\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 300,
        "wires": [
            [
                "8d54f61ab89ebbd6"
            ]
        ]
    },
    {
        "id": "8d54f61ab89ebbd6",
        "type": "ui_template",
        "z": "6cf0017697520c44",
        "group": "eff8c2fb7917b0ab",
        "name": "Indicators",
        "order": 18,
        "width": 6,
        "height": "2",
        "format": "<div style=\"display: flex; flex-direction: column; gap: 8px; border: 0px solid black; padding-top: 5px; padding-bottom: 5px; background-color: #3c3c3c;\">\n    <div style=\"display: flex; align-items: center; justify-content: space-between; margin-left: 13px;\">\n        <span>MPTT FAN</span>\n        <div id=\"mptt-fan-indicator\"\n            style=\"width: 20px; height: 20px; border-radius: 50%; background-color: grey; margin-right: 13px;\">\n        </div>\n    </div>\n    <div style=\"display: flex; align-items: center; justify-content: space-between; margin-left: 13px;\">\n        <span>CHANGER FAN</span>\n        <div id=\"changer-fan-indicator\"\n            style=\"width: 20px; height: 20px; border-radius: 50%; background-color: grey; margin-right: 13px;\">\n        </div>\n    </div>\n</div>\n\n<script>\n    (function(scope) {\n    function updateIndicator(indicatorId, turnValue) {\n        var indicator = document.getElementById(indicatorId);\n        if (turnValue === 'on') {\n            indicator.style.backgroundColor = '#32cd32'; // Zelená barva\n        } else {\n            indicator.style.backgroundColor = 'grey'; // Šedá barva\n        }\n    }\n\n    scope.$watch('msg.payload', function(msg) {\n        if (msg && msg.indicator && msg.status) {\n            updateIndicator(msg.indicator + '-indicator', msg.status);\n        }\n    });\n})(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1620,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "af0ca4755bf9af8e",
        "type": "delay",
        "z": "6cf0017697520c44",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 280,
        "wires": [
            [
                "9b2cf902516106b9"
            ]
        ]
    },
    {
        "id": "4ef9e70b2ecc71c2",
        "type": "modbus-read",
        "z": "7996ac9a8ad2ee7a",
        "name": "AC Consumption L1",
        "topic": "phase1",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "100",
        "dataType": "InputRegister",
        "adr": "817",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "10",
        "server": "5e730295abd379ae",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 230,
        "y": 300,
        "wires": [
            [
                "cec600dec1d94bfd"
            ],
            [
                "1f5e9abebc20c462"
            ]
        ]
    },
    {
        "id": "ef6e0f1613b3a5d3",
        "type": "modbus-read",
        "z": "7996ac9a8ad2ee7a",
        "name": "AC Consumption L2",
        "topic": "phase2",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "100",
        "dataType": "InputRegister",
        "adr": "818",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "10",
        "server": "5e730295abd379ae",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 230,
        "y": 340,
        "wires": [
            [
                "cec600dec1d94bfd"
            ],
            [
                "1f5e9abebc20c462"
            ]
        ]
    },
    {
        "id": "45f60e36c74c2ecd",
        "type": "modbus-read",
        "z": "7996ac9a8ad2ee7a",
        "name": "AC Consumption L3",
        "topic": "phase3",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "100",
        "dataType": "InputRegister",
        "adr": "819",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "10",
        "server": "5e730295abd379ae",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 230,
        "y": 380,
        "wires": [
            [
                "cec600dec1d94bfd"
            ],
            [
                "1f5e9abebc20c462"
            ]
        ]
    },
    {
        "id": "1f5e9abebc20c462",
        "type": "modbus-response",
        "z": "7996ac9a8ad2ee7a",
        "name": "",
        "registerShowMax": "50",
        "x": 570,
        "y": 400,
        "wires": []
    },
    {
        "id": "3115d0ce2030ec6f",
        "type": "function",
        "z": "7996ac9a8ad2ee7a",
        "name": "AC LOAD",
        "func": "//*****************************************************************************\n//\n// File Name        : GUI\n// Title            : GUI\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 20-06-2024, 11:00\n// Revised          : 10-07-2024\n// Version          : 1.20\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\n//definice globalních funkci\nconst removeSpacesAroundDots = global.get('removeSpacesAroundDots');\nconst nConvertSignetUnsignet = global.get('nConvertSignetUnsignet');\nconst mExtractTime = global.get('mExtractTime');\nconst sExtractTime = global.get('sExtractTime');\nconst sCounty_Code = global.get('sCounty_Code');\nconst sTZidentifier = global.get('sTZidentifier');\n\ntry {\n    if (removeSpacesAroundDots && sExtractTime && sCounty_Code && sTZidentifier && nConvertSignetUnsignet && mExtractTime) {\n        const nRezerva = 230;\n        let nSet_Grid_Point = 0;\n\n        // Definice fazi AC LOAD\n        const phase1 = parseFloat(msg.payload.phase1) || 0;  // Hodnota z registru 817\n        const phase2 = parseFloat(msg.payload.phase2) || 0;  // Hodnota z registru 818\n        const phase3 = parseFloat(msg.payload.phase3) || 0;  // Hodnota z registru 819\n    \n        // Definice Gridu\n        const grid1 = nConvertSignetUnsignet(parseFloat(msg.payload.grid1)) || 0;  // Hodnota z registru 811\n        const grid2 = nConvertSignetUnsignet(parseFloat(msg.payload.grid2)) || 0;  // Hodnota z registru 812\n        const grid3 = nConvertSignetUnsignet(parseFloat(msg.payload.grid3)) || 0;  // Hodnota z registru 813\n\n        // Definice vyroby FV panelu\n        const pvPower = parseFloat(msg.payload.totalPVPower) || 0;  // Hodnota z registru 819\n\n        // Definice stavu nabiti baterie\n        const nBattery_State_Charge = parseFloat(msg.payload.nBattery_State_Charge) || 0;  // Hodnota z registru 843\n        const nBattery_Power = parseFloat(msg.payload.nBattery_Power) || 0; // Battery Power (System) 842 ve W\n        const nBattery_Current = parseFloat(msg.payload.nBattery_Current) || 0; // Battery Power (System) 841 ve W\n        const nBattery_Voltage = parseFloat(msg.payload.nBattery_Voltage) || 0; // Battery Power (System) 840 ve W\n\n        // Pole dnesniho spotu\n        const todayHourlyPrices = global.get(\"todayHourlyPrices\");\n\n        // Ulozeni dat do globalnich promennych, ktere jsou dostupne mezi flow\n        global.set(\"phase1\", phase1);\n        global.set(\"phase2\", phase2);\n        global.set(\"phase3\", phase3);\n        global.set(\"pvPower\", pvPower);\n        global.set(\"nBattery_State_Charge\", nBattery_State_Charge);\n        global.set(\"grid1\", grid1);\n        global.set(\"grid2\", grid2);\n        global.set(\"grid3\", grid3);\n        global.set(\"nBattery_Power\", nBattery_Power);\n        global.set(\"nBattery_Current\", nBattery_Current);\n        global.set(\"nBattery_Voltage\", nBattery_Voltage);\n\n        // Načteni globalnich dat\n        const nGridConsumptionEnable = global.get(\"nGridConsumptionEnable\") || 0; // true znamena zapnut přepinač NUCENY ODBER Z GRIDu\n        const nSetGridValue = global.get(\"nSetGridValue\") || 0; // Hodnota sítoveho odberu\n        const isSpotAutoCtrlEnabled = global.get(\"isSpotAutoCtrlEnabled\") || 0; // true znamená Automaticky podle SPOTu\n        const spotTresholdPrice = global.get(\"spotTresholdPrice\") || 0; // Limitni cena\n        const currentPrice = global.get(\"currentPrice\") || 0; // Aktualni SPOT cena\n        const nPretoky = global.get(\"nPretoky\") || 0; // Pretoky povoleny- true, zakazany - false\n        const switchDelayCharging = global.get(\"switchDelayCharging\") || 0; // true znamena ze je aktivovana funkce posunuti nabijeni baterie\n        const tDefaultTimeStart = global.get(\"tDefaultTimeStart\") || 0; // Defaultni cas zacatku posunuti nabijeni beterie\n        const tStartBattery = global.get(\"tStartBattery\") || 0; // Zadany cas start posunu nabijeni beterie\n        const tStopBattery = global.get(\"tStopBattery\") || 0; // Zadany cas stop posunu nabijeni beterie\n\n        const nMorningPeakBatterySales = global.get(\"nMorningPeakBatterySales\") || 0; // Switch Prodej baterie v ranní špičce\n        const nEveningPeakBatterySales = global.get(\"nEveningPeakBatterySales\") || 0; // Switch Prodej baterie ve večerní špičce\n        const nMorningSOC_sales = global.get(\"nMorningSOC_sales\") || 0; // Procenta - Prodej Rano do SOC\n        const nEveningSOC_sales = global.get(\"nEveningSOC_sales\") || 0; // Procenta - Prodej Večer do SOC\n\n        const currentTime = new Date(); // aktualni cas\n        const sDate = currentTime.toLocaleString(sCounty_Code, { timeZone: sTZidentifier }); // prida CZ lokaci\n\n        const oDate_CZ = sExtractTime(removeSpacesAroundDots(sDate)); // upravi stavajici obekt cas na prijatelnou podobu pro porovnavani\n\n        const tStartBatteryTime = mExtractTime(tStartBattery); // vstupni promenna je jen milisekundy a nejde porovnavat s aktualnim casem, tak opet uprava na prijatelnou podobu pro porovnavani.\n        const tStopBatteryTime = mExtractTime(tStopBattery);\n\n        // Spočítat celkový odběr AC zátěže\n        let totalACLoad = phase1 + phase2 + phase3;\n\n        // Hleda ranni a odpoleni peaky\n        // prvni promenna je pole aktualniho spot a druha promenna rika jak dlouhy peak muse bejt\n        const morningPeak1 = findMorningPeakHours(todayHourlyPrices, 2);\n        const afternoonPeak1 = findAfternoonPeakHours(todayHourlyPrices, 2);\n\n        // Debugging\n        if (debug) {\n            //node.warn(\"global.get(todayHourlyPrices): \" + todayHourlyPrices);\n            //node.warn(\"global.get(morningPeak1): \" + morningPeak1);\n            //node.warn(\"global.get(afternoonPeak1): \" + afternoonPeak1);\n            node.warn(\"tStartBatteryTime: \" + tStartBatteryTime);\n            node.warn(\"tStopBatteryTime: \" + tStopBatteryTime);\n            node.warn(\"oDate_CZ: \" + oDate_CZ);\n            node.warn(\"nSet_Grid_Point: \" + nSet_Grid_Point);\n        }\n\n        nSet_Grid_Point = fSet_Grid(nGridConsumptionEnable, nSetGridValue, isSpotAutoCtrlEnabled, spotTresholdPrice, currentPrice, nPretoky);    \n\n        let nZbytekFV = pvPower - (totalACLoad + nRezerva);\n\n        // funkce na posun nabijeni baterii\n        if (tStartBatteryTime && tStopBatteryTime) {\n            if (switchDelayCharging == true) { // true znamena ze je aktivovana funkce posunuti nabijeni baterie\n                if (nPretoky == true) { // povolene pretoky\n                    if (oDate_CZ >= tStartBatteryTime && oDate_CZ <= tStopBatteryTime) { // Aktuální čas je v rozsahu\n                        if (nZbytekFV > 0) { // Prebytek FV je kladna hodnota\n                            nSet_Grid_Point = -nZbytekFV; // prevest na zapornou hodnotu\n                        } else { // mala vyroba z FV panelu\n                            nSet_Grid_Point = 0;\n                            //node.warn(\"1: \");\n                        }\n                    } else { // Aktuální čas je mimo rozsah\n                        // nSet_Grid_Point = fSet_Grid(nGridConsumptionEnable, nSetGridValue, isSpotAutoCtrlEnabled, spotTresholdPrice, currentPrice, nPretoky);  \n                        //node.warn(\"2: \");  \n                    }\n                } else { // Čas začátku nebo konce není nastaven\n                    nSet_Grid_Point = 0;\n                    //node.warn(\"3: \");\n                }\n            }\n        }\n\n        // funkce vybití baterie při ranní špičce\n        if (nMorningPeakBatterySales) {\n            if (morningPeak1.length > 0) {\n                const peakTimeStart = new Date(oDate_CZ.getFullYear(), oDate_CZ.getMonth(), oDate_CZ.getDate(), morningPeak1[0], 0, 0, 0);\n                const peakTimeEnd = new Date(oDate_CZ.getFullYear(), oDate_CZ.getMonth(), oDate_CZ.getDate(), morningPeak1[morningPeak1.length - 1], 59, 0, 0);\n\n                if (debug) {\n                    //node.warn(\"-----------------------------------------\");\n                    //node.warn(\"global.get(morningPeak1): \" + morningPeak1);\n                    //node.warn(\"peakTimeStart: \" + peakTimeStart);\n                    //node.warn(\"peakTimeEnd: \" + peakTimeEnd);\n                    //node.warn(\"oDate_CZ: \" + oDate_CZ);\n                    //node.warn(\"global.get(nBattery_State_Charge): \" + nBattery_State_Charge);\n                    //node.warn(\"nSet_Grid_Point: \" + nSet_Grid_Point);\n                }\n\n                if (oDate_CZ >= peakTimeStart && oDate_CZ < peakTimeEnd) {\n                    if (nBattery_State_Charge >= nMorningSOC_sales) {\n                        nSet_Grid_Point = -5000;\n                    }\n                }\n            }\n        }\n\n        // Nastavit celkový odběr jako novou hodnotu pro nastavení sítě\n        msg.payload = { \"nSet_Grid_Point\": nSet_Grid_Point,\n                        \"pvPower\": pvPower,\n                        \"totalACLoad\": totalACLoad,\n                        \"nZbytekFV\": nZbytekFV\n                        };\n\n        } else {// nenalezeny globalni funkce\n        node.error(\"Globální funkce nebyly nalezeny. <-- FORM BATTERY CONTROL-- AC LOAD\");\n    }\n    return msg;\n} catch (error) {\n    node.error(\"Error in script: \" + error.message);\n}\n\n// funkce nastavuje GridPoint podle zadane hodnoty\nfunction fSet_Grid(nGridConsumptionEnable, nSetGridValue, isSpotAutoCtrlEnabled, spotTresholdPrice, currentPrice, nPretoky) {\n    let nSetGridPoint = 0;\n\n    if (currentPrice > 0) { // Dokud neni zaporný spot\n        if (nGridConsumptionEnable == true) { // zapnuy nuceny odber z Gridu\n            // if(spotTresholdPrice <= currentPrice) // aktualni cena je rovne nebo vetsi nastavena limitni cena\n            nSetGridPoint = nSetGridValue;\n        }\n    }\n    return nSetGridPoint; \n}\n\n// Tato funkce vypočítá medián zadaných hodnot\nfunction calculateMedian(values) {\n    values = values.slice().sort((a, b) => a - b);\n    const mid = Math.floor(values.length / 2);\n\n    if (values.length % 2 === 0) {\n        return (values[mid - 1] + values[mid]) / 2;\n    } else {\n        return values[mid];\n    }\n}\n\n// Tyto funkce používají calculateMedian k určení prahové hodnoty pro ranní a odpolední hodiny\nfunction findMorningPeakHours(hourlyValues, maxPeakLength = 3) {\n    if (hourlyValues.length !== 24) {\n        throw new Error('Array must contain exactly 24 elements.');\n    }\n\n    const peakThreshold = calculateMedian(hourlyValues.slice(0, 12));\n    let morningPeakHours = [];\n\n    // Najít ranní špičku (0-11 hodin)\n    for (let i = 0; i < 12; i++) {\n        if (hourlyValues[i] >= peakThreshold) {\n            morningPeakHours.push(i);\n        }\n    }\n\n    return findContinuousBlocks(morningPeakHours, maxPeakLength, hourlyValues);\n}\n\nfunction findAfternoonPeakHours(hourlyValues, maxPeakLength = 3) {\n    if (hourlyValues.length !== 24) {\n        throw new Error('Array must contain exactly 24 elements.');\n    }\n\n    const peakThreshold = calculateMedian(hourlyValues.slice(12, 24));\n    let afternoonPeakHours = [];\n\n    // Najít večerní špičku (12-23 hodin)\n    for (let i = 12; i < 24; i++) {\n        if (hourlyValues[i] >= peakThreshold) {\n            afternoonPeakHours.push(i);\n        }\n    }\n\n    return findContinuousBlocks(afternoonPeakHours, maxPeakLength, hourlyValues);\n}\n\n// Tato funkce zjišťuje souvislé bloky hodin v daném poli a vrací nejdelší blok nebo prázdné pole\nfunction findContinuousBlocks(hoursArray, maxPeakLength, values) {\n    let blocks = [];\n    let currentBlock = [];\n\n    for (let i = 0; i < hoursArray.length; i++) {\n        if (currentBlock.length === 0) {\n            currentBlock.push(hoursArray[i]);\n        } else if (hoursArray[i] === currentBlock[currentBlock.length - 1] + 1) {\n            currentBlock.push(hoursArray[i]);\n        } else {\n            blocks.push(currentBlock);\n            currentBlock = [hoursArray[i]];\n        }\n    }\n\n    if (currentBlock.length > 0) {\n        blocks.push(currentBlock);\n    }\n\n    // Najít nejdelší blok nebo vrátit prázdné pole, s maximální délkou bloku\n    let longestBlock = blocks.reduce((a, b) => (a.length > b.length ? a : b), []);\n\n    if (longestBlock.length > maxPeakLength) {\n        let bestBlock = longestBlock.slice(0, maxPeakLength);\n        let bestAvg = calculateAverage(bestBlock, values);\n\n        for (let i = 1; i <= longestBlock.length - maxPeakLength; i++) {\n            let currentBlock = longestBlock.slice(i, i + maxPeakLength);\n            let currentAvg = calculateAverage(currentBlock, values);\n\n            if (currentAvg > bestAvg) {\n                bestBlock = currentBlock;\n                bestAvg = currentAvg;\n            }\n        }\n\n        return bestBlock;\n    } else {\n        return longestBlock;\n    }\n}\n\n// Tato funkce vypočítá průměrnou hodnotu pro daný blok hodin\nfunction calculateAverage(block, values) {\n    let sum = block.reduce((acc, hour) => acc + values[hour], 0);\n    return sum / block.length;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 320,
        "wires": [
            [
                "e3e693e4b61850ee",
                "9a1f2f8805f543fb",
                "3f208915524075da",
                "f3d65ae8e65e4ac6",
                "ba14073142dc8d0a"
            ]
        ]
    },
    {
        "id": "e3e693e4b61850ee",
        "type": "debug",
        "z": "7996ac9a8ad2ee7a",
        "name": "AC LOAD",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.totalACLoad",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 840,
        "y": 120,
        "wires": []
    },
    {
        "id": "cec600dec1d94bfd",
        "type": "join",
        "z": "7996ac9a8ad2ee7a",
        "name": "AC CON.",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": true,
        "accumulate": false,
        "timeout": "1",
        "count": "11",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 510,
        "y": 320,
        "wires": [
            [
                "3115d0ce2030ec6f"
            ]
        ]
    },
    {
        "id": "c7a153a07781cdf5",
        "type": "modbus-read",
        "z": "7996ac9a8ad2ee7a",
        "name": "READ ESS control loop setpoint",
        "topic": "readgridpoint",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "100",
        "dataType": "InputRegister",
        "adr": "2700",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "10",
        "server": "5e730295abd379ae",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 270,
        "y": 540,
        "wires": [
            [
                "394228e3099e5995"
            ],
            [
                "1f5e9abebc20c462"
            ]
        ]
    },
    {
        "id": "1f78db0fc7ca1706",
        "type": "debug",
        "z": "7996ac9a8ad2ee7a",
        "name": "GRID POINT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 850,
        "y": 540,
        "wires": []
    },
    {
        "id": "394228e3099e5995",
        "type": "function",
        "z": "7996ac9a8ad2ee7a",
        "name": "convert signet to unsignet",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A \n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 20-06-2024, 11:00\n// Revised          : 14-07-2024\n// Version          : 1.01\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\n//definice globalních funkci\nconst nConvertSignetUnsignet = global.get('nConvertSignetUnsignet');\nconst readgridpoint = parseFloat(msg.payload) || 0; //\n\n\n // Debugging\nif (debug) {\n    node.warn(\"readgridpoint: \" + readgridpoint);\n}\n        \nif (nConvertSignetUnsignet) {\n    msg.payload = nConvertSignetUnsignet(readgridpoint);\n}   else {\n    node.error(\"Globální funkce nebyly nalezeny. <-FORM Battery Control -- convert Signet to Unsignet\");\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 540,
        "wires": [
            [
                "1f78db0fc7ca1706",
                "cdbb430a58676409"
            ]
        ]
    },
    {
        "id": "ab5ff1b4c5a7c628",
        "type": "modbus-read",
        "z": "7996ac9a8ad2ee7a",
        "name": "Total PV Power",
        "topic": "totalPVPower",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "100",
        "dataType": "InputRegister",
        "adr": "850",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "10",
        "server": "5e730295abd379ae",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 220,
        "y": 460,
        "wires": [
            [
                "cec600dec1d94bfd"
            ],
            [
                "1f5e9abebc20c462"
            ]
        ]
    },
    {
        "id": "9a1f2f8805f543fb",
        "type": "debug",
        "z": "7996ac9a8ad2ee7a",
        "name": "pvPower",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.pvPower",
        "targetType": "msg",
        "statusVal": "payload. pvPower",
        "statusType": "auto",
        "x": 840,
        "y": 180,
        "wires": []
    },
    {
        "id": "3f208915524075da",
        "type": "debug",
        "z": "7996ac9a8ad2ee7a",
        "name": "nZbytekFV",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.nZbytekFV",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 850,
        "y": 240,
        "wires": []
    },
    {
        "id": "4fa928a26e09c60d",
        "type": "modbus-write",
        "z": "7996ac9a8ad2ee7a",
        "name": "WRITE ESS control loop setpoint",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "100",
        "dataType": "HoldingRegister",
        "adr": "2700",
        "quantity": "1",
        "server": "5e730295abd379ae",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1200,
        "y": 360,
        "wires": [
            [],
            [
                "868a11fddbae10cd"
            ]
        ]
    },
    {
        "id": "868a11fddbae10cd",
        "type": "modbus-response",
        "z": "7996ac9a8ad2ee7a",
        "name": "",
        "registerShowMax": "5",
        "x": 1470,
        "y": 360,
        "wires": []
    },
    {
        "id": "ba14073142dc8d0a",
        "type": "function",
        "z": "7996ac9a8ad2ee7a",
        "name": "convert unsignet to signet",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A \n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 20-06-2024, 11:00\n// Revised          : 14-07-2024\n// Version          : 1.01\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\n// Získat poslední odeslanou hodnotu z kontextu\nlet nLastValue_Set_Grid_Point = context.get('nLastValue_Set_Grid_Point');\n\n// Definice globálních funkcí\nconst nConvertUnsignetToSignet = global.get('nConvertUnsignetToSignet');\nlet writegridpoint = parseFloat(msg.payload.nSet_Grid_Point) || 0;\n\nif (nConvertUnsignetToSignet) {\n    writegridpoint = nConvertUnsignetToSignet(writegridpoint);\n    \n    // Porovnat aktuální hodnotu s poslední odeslanou hodnotou\n    if (writegridpoint !== nLastValue_Set_Grid_Point) {\n\n        // Hodnota se změnila, uložit novou hodnotu do kontextu\n        context.set('nLastValue_Set_Grid_Point', writegridpoint); \n        \n        msg.payload = writegridpoint; // Odeslat zprávu\n\n    } else {\n        // Hodnota je stejná, neodeslat zprávu\n\n        return null; // Vrátit null, aby zpráva nebyla odeslána\n    }\n    \n    // Debugging\n    if (debug) {\n        node.warn(\"writegridpoint: \" + writegridpoint);\n        node.warn(\"nLastValue_Set_Grid_Point: \" + nLastValue_Set_Grid_Point);\n        node.warn(\"msg.payload: \" + msg.payload);\n    }\n} else {\n    node.error(\"Globální funkce nebyly nalezeny. <-FORM Battery Control -- convert Unsignet to signet\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 360,
        "wires": [
            [
                "2ef53d56057d98bc",
                "4fa928a26e09c60d"
            ]
        ]
    },
    {
        "id": "2ef53d56057d98bc",
        "type": "debug",
        "z": "7996ac9a8ad2ee7a",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1120,
        "y": 280,
        "wires": []
    },
    {
        "id": "f3d65ae8e65e4ac6",
        "type": "debug",
        "z": "7996ac9a8ad2ee7a",
        "name": "nSet_Grid_Point",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.nSet_Grid_Point",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 860,
        "y": 300,
        "wires": []
    },
    {
        "id": "cdbb430a58676409",
        "type": "ui_text",
        "z": "7996ac9a8ad2ee7a",
        "group": "b1eb05edab318eb0",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Cerbo ESS control loop setpoint",
        "format": "<font color={{fcolor}}>{{msg.payload}}",
        "layout": "row-spread",
        "className": "Kulati_Nahore",
        "style": true,
        "font": "",
        "fontSize": "16",
        "color": "#0084ff",
        "x": 890,
        "y": 480,
        "wires": []
    },
    {
        "id": "fe4b662be5a55416",
        "type": "modbus-read",
        "z": "7996ac9a8ad2ee7a",
        "name": "Battery State of Charge",
        "topic": "nBattery_State_Charge",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "100",
        "dataType": "HoldingRegister",
        "adr": "843",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": true,
        "startDelayTime": "10",
        "server": "5e730295abd379ae",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 240,
        "y": 240,
        "wires": [
            [
                "cec600dec1d94bfd"
            ],
            [
                "1f5e9abebc20c462"
            ]
        ]
    },
    {
        "id": "579d1b1761410efc",
        "type": "catch",
        "z": "7996ac9a8ad2ee7a",
        "name": "Catch Errors",
        "scope": [
            "868a11fddbae10cd",
            "3115d0ce2030ec6f",
            "e3e693e4b61850ee"
        ],
        "uncaught": false,
        "x": 210,
        "y": 80,
        "wires": [
            [
                "e29bc9e03cf59245"
            ]
        ]
    },
    {
        "id": "e29bc9e03cf59245",
        "type": "debug",
        "z": "7996ac9a8ad2ee7a",
        "name": "Debug Errors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 430,
        "y": 80,
        "wires": []
    },
    {
        "id": "945ee483a66e0df2",
        "type": "modbus-read",
        "z": "7996ac9a8ad2ee7a",
        "name": "GRID L1",
        "topic": "grid1",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "100",
        "dataType": "InputRegister",
        "adr": "820",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "10",
        "server": "5e730295abd379ae",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 200,
        "y": 620,
        "wires": [
            [
                "cec600dec1d94bfd"
            ],
            [
                "1f5e9abebc20c462"
            ]
        ]
    },
    {
        "id": "56ad64547e499cf0",
        "type": "modbus-read",
        "z": "7996ac9a8ad2ee7a",
        "name": "GRID L2",
        "topic": "grid2",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "100",
        "dataType": "InputRegister",
        "adr": "821",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "10",
        "server": "5e730295abd379ae",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 200,
        "y": 680,
        "wires": [
            [
                "cec600dec1d94bfd"
            ],
            [
                "1f5e9abebc20c462"
            ]
        ]
    },
    {
        "id": "f7a0a85aa9e9b556",
        "type": "modbus-read",
        "z": "7996ac9a8ad2ee7a",
        "name": "GRID L3",
        "topic": "grid3",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "100",
        "dataType": "InputRegister",
        "adr": "822",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "10",
        "server": "5e730295abd379ae",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 200,
        "y": 740,
        "wires": [
            [
                "cec600dec1d94bfd"
            ],
            [
                "1f5e9abebc20c462"
            ]
        ]
    },
    {
        "id": "e809cfb2809a0836",
        "type": "modbus-read",
        "z": "7996ac9a8ad2ee7a",
        "name": "Battery Power",
        "topic": "nBattery_Power",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "100",
        "dataType": "HoldingRegister",
        "adr": "842",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": true,
        "startDelayTime": "10",
        "server": "5e730295abd379ae",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 210,
        "y": 200,
        "wires": [
            [
                "cec600dec1d94bfd"
            ],
            [
                "1f5e9abebc20c462"
            ]
        ],
        "info": "Postive: battery begin charged. Negative: battery being"
    },
    {
        "id": "5b7617e45d09ab22",
        "type": "modbus-read",
        "z": "7996ac9a8ad2ee7a",
        "name": "Battery Current ",
        "topic": "nBattery_Current",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "100",
        "dataType": "HoldingRegister",
        "adr": "841",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": true,
        "startDelayTime": "10",
        "server": "5e730295abd379ae",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 220,
        "y": 160,
        "wires": [
            [
                "cec600dec1d94bfd"
            ],
            [
                "1f5e9abebc20c462"
            ]
        ],
        "info": "Postive: battery begin charged. Negative: battery being"
    },
    {
        "id": "5912ccd19f0ae5d0",
        "type": "modbus-read",
        "z": "7996ac9a8ad2ee7a",
        "name": "Battery Voltage",
        "topic": "nBattery_Voltage",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "100",
        "dataType": "HoldingRegister",
        "adr": "840",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": true,
        "startDelayTime": "10",
        "server": "5e730295abd379ae",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 220,
        "y": 120,
        "wires": [
            [
                "cec600dec1d94bfd"
            ],
            [
                "1f5e9abebc20c462"
            ]
        ],
        "info": "Postive: battery begin charged. Negative: battery being"
    },
    {
        "id": "c5864e157a733b8f",
        "type": "delay",
        "z": "b986d298710d9da5",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 260,
        "y": 680,
        "wires": [
            [
                "2d331a50b0d61710"
            ]
        ]
    },
    {
        "id": "2d331a50b0d61710",
        "type": "http request",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "http SPOT request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://moje.deltagreen.cz/api/prices/daily",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 510,
        "y": 680,
        "wires": [
            [
                "d153678c838836aa"
            ]
        ]
    },
    {
        "id": "d153678c838836aa",
        "type": "json",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "SPOT Data",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 710,
        "y": 680,
        "wires": [
            [
                "94da292e68864339",
                "64105c5a3b20bb19",
                "ad3b7d4443f6b79e",
                "f7b462f22622136e"
            ]
        ]
    },
    {
        "id": "56dc9731dc569a6e",
        "type": "change",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "red color",
        "rules": [
            {
                "t": "set",
                "p": "fcolor",
                "pt": "msg",
                "to": "dd6875",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "isSpotAutoCtrlEnabled",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 420,
        "wires": [
            [
                "e418a527df65e767"
            ]
        ]
    },
    {
        "id": "94da292e68864339",
        "type": "switch",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "",
        "property": "payload.currentPrice",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "spotTresholdPrice",
                "vt": "flow"
            },
            {
                "t": "gte",
                "v": "spotTresholdPrice",
                "vt": "flow"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 930,
        "y": 480,
        "wires": [
            [
                "56dc9731dc569a6e"
            ],
            [
                "bb98cb7e8515fb25"
            ],
            [
                "f96e7d2a877f8124"
            ]
        ]
    },
    {
        "id": "e418a527df65e767",
        "type": "ui_text",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "group": "6bdf3420903b72e3",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Aktuální SPOT cena",
        "format": "<font color={{msg.fcolor}}>{{msg.payload.currentPrice | number:2}} Kč/kWh",
        "layout": "row-spread",
        "className": "Indicator_ActualSpotCena",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1640,
        "y": 460,
        "wires": []
    },
    {
        "id": "bb98cb7e8515fb25",
        "type": "change",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "green color",
        "rules": [
            {
                "t": "set",
                "p": "fcolor",
                "pt": "msg",
                "to": "limegreen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "isSpotAutoCtrlEnabled",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 460,
        "wires": [
            [
                "e418a527df65e767"
            ]
        ]
    },
    {
        "id": "ad45e2698cf99e24",
        "type": "change",
        "z": "b986d298710d9da5",
        "g": "f5e086d890235524",
        "name": "Set isSpotAutoCtrlEnabled",
        "rules": [
            {
                "t": "set",
                "p": "isSpotAutoCtrlEnabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 300,
        "wires": [
            [
                "908261638ccf1e55",
                "2d331a50b0d61710"
            ]
        ]
    },
    {
        "id": "aff8246490c0e5c9",
        "type": "inject",
        "z": "b986d298710d9da5",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 260,
        "wires": [
            [
                "b1d0b2f4a481604a",
                "6d1517ea8198a4a6"
            ]
        ]
    },
    {
        "id": "6d1517ea8198a4a6",
        "type": "delay",
        "z": "b986d298710d9da5",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 280,
        "y": 300,
        "wires": [
            [
                "8a79a9c6f5c85868"
            ]
        ]
    },
    {
        "id": "31e526f3dcbd2b2a",
        "type": "ui_switch",
        "z": "b986d298710d9da5",
        "g": "f5e086d890235524",
        "name": "Automaticky",
        "label": "Automaticky podle SPOTu",
        "tooltip": "",
        "group": "6bdf3420903b72e3",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "Switch_Spot",
        "x": 630,
        "y": 300,
        "wires": [
            [
                "ad45e2698cf99e24"
            ]
        ]
    },
    {
        "id": "8a79a9c6f5c85868",
        "type": "change",
        "z": "b986d298710d9da5",
        "g": "f5e086d890235524",
        "name": "Set UI",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "isSpotAutoCtrlEnabled",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 300,
        "wires": [
            [
                "31e526f3dcbd2b2a"
            ]
        ]
    },
    {
        "id": "16f96aa183feec96",
        "type": "ui_text",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "group": "6bdf3420903b72e3",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Připojení na SPOT",
        "format": "<font color={{msg.fcolor}}>{{msg.payload}}",
        "layout": "row-spread",
        "className": "Indicator_Online",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1690,
        "y": 880,
        "wires": []
    },
    {
        "id": "b5253809c21b8037",
        "type": "debug",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "ERROR IN SPOT REQUEST",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1720,
        "y": 920,
        "wires": []
    },
    {
        "id": "76540fe7bea2088e",
        "type": "change",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "hCurrentPrice Active",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "AKTIVNÍ",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "fcolor",
                "pt": "msg",
                "to": "limegreen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "isSpotAutoCtrlEnabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 880,
        "wires": [
            [
                "16f96aa183feec96",
                "cf6ec63e9e803b5c"
            ]
        ]
    },
    {
        "id": "b70c9a8e3f33594d",
        "type": "change",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "hCurrentPrice Error",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SELHALO",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "fcolor",
                "pt": "msg",
                "to": "red",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "isSpotAutoCtrlEnabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 920,
        "wires": [
            [
                "16f96aa183feec96",
                "b5253809c21b8037"
            ]
        ]
    },
    {
        "id": "af6a1b22fa66ca61",
        "type": "catch",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "",
        "scope": [
            "2d331a50b0d61710",
            "d153678c838836aa"
        ],
        "uncaught": false,
        "x": 750,
        "y": 960,
        "wires": [
            [
                "f7b462f22622136e"
            ]
        ]
    },
    {
        "id": "e30fb63eea32171a",
        "type": "change",
        "z": "b986d298710d9da5",
        "g": "5ece208427d51524",
        "name": "Set UI (ON)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "POVOLENY",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "fcolor",
                "pt": "msg",
                "to": "limegreen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "nPretoky",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 100,
        "wires": [
            [
                "e206cc31a3e05c0f"
            ]
        ]
    },
    {
        "id": "d4ef1b7263f1f0c7",
        "type": "switch",
        "z": "b986d298710d9da5",
        "g": "5ece208427d51524",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 80,
        "wires": [
            [
                "d0c4a942cea93b17"
            ],
            [
                "e30fb63eea32171a"
            ]
        ]
    },
    {
        "id": "e206cc31a3e05c0f",
        "type": "ui_text",
        "z": "b986d298710d9da5",
        "g": "5ece208427d51524",
        "group": "6bdf3420903b72e3",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Přetoky",
        "format": "<font color={{fcolor}}>{{msg.payload}}",
        "layout": "row-spread",
        "className": "Kulati_Nahore",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1320,
        "y": 80,
        "wires": []
    },
    {
        "id": "d0c4a942cea93b17",
        "type": "change",
        "z": "b986d298710d9da5",
        "g": "5ece208427d51524",
        "name": "Set UI (OFF)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ZAKÁZÁNY",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "fcolor",
                "pt": "msg",
                "to": "dd6875",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "nPretoky",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 60,
        "wires": [
            [
                "e206cc31a3e05c0f"
            ]
        ]
    },
    {
        "id": "13ea6ca0b9ca3e03",
        "type": "ui_chart",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "",
        "group": "7d718c13f8419912",
        "order": 2,
        "width": 6,
        "height": 6,
        "label": "Dnešní SPOT",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#ff8800",
            "#55ff55",
            "#eea5a5",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "Kulati_Dole",
        "x": 1620,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "ad3b7d4443f6b79e",
        "type": "function",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "Prepare tomorrow chart data",
        "func": "//*****************************************************************************\n//\n// File Name        : 'Node_Graf_Spot_Zitra'\n// Title            : Node pro vypočet grafu\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 14-07-2024, 11:00\n// Revised          : 14-07-2024, 12:35\n// Version          : 1.11\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\n//definice globalních funkci\nconst removeSpacesAroundDots = global.get('removeSpacesAroundDots');\nconst sExtractTime = global.get('sExtractTime');\nconst sCounty_Code = global.get('sCounty_Code');\nconst sTZidentifier = global.get('sTZidentifier');\n\n\nif (removeSpacesAroundDots && sExtractTime && sCounty_Code && sTZidentifier) {\n    if (\"tomorrowHourlyPrices\" in msg.payload) {\n        var line1 = [];\n        var line2 = [];\n        const currentTime = new Date();\n        const sDate = currentTime.toLocaleString(sCounty_Code, { timeZone: sTZidentifier }); // prida CZ lokaci\n        const oDate_CZ = sExtractTime(removeSpacesAroundDots(sDate)); // upravi stavajici objekt cas na prijatelnou podobu pro porovnavani\n\n        var spotTresholdPrice = global.get(\"spotTresholdPrice\");\n        var hourlyPrices = msg.payload.tomorrowHourlyPrices;\n\n        var minPrice = Math.min(...hourlyPrices);\n        var maxPrice = Math.max(...hourlyPrices);\n\n        for (var i = 0; i < 24;) {\n\n            // spot price\n            line1[i] = { \"x\": new Date(oDate_CZ.setUTCHours(i, 0, 0)), \"y\": hourlyPrices[i] };\n            // spot treshold\n            line2[i] = { \"x\": new Date(oDate_CZ.setUTCHours(i, 0, 0)), \"y\": spotTresholdPrice };\n\n            if (debug) {\n                //   node.warn(\"oDate_CZ: \" + oDate_CZ);\n                //   node.warn(\"i: \" + i);\n                //   node.warn(\"hourlyPrices[i] : \" + hourlyPrices[i] );\n            }\n            i++;\n        }\n\n        // add one more point to finish chart line\n        line1[24] = { \"x\": new Date(oDate_CZ.setUTCHours(23, 59, 59)), \"y\": hourlyPrices[23] };\n        line2[24] = { \"x\": new Date(oDate_CZ.setUTCHours(23, 59, 59)), \"y\": spotTresholdPrice };\n\n        msg.payload = [{\n            \"series\": [\"Kč/kWh\", \"Spot limit\"],\n            \"data\": [line1, line2]\n        }];\n\n        msg.minmax = minPrice.toFixed(2) + \" | \" + maxPrice.toFixed(2);\n    } else {\n        // clear chart data to reset, data not available\n        msg.payload = [];\n    }\n\n} else {// nenalezeny globalni funkce\n    node.error(\"Globální funkce nebyly nalezeny. <-- FORM SPOT GRAF -- Prepare tomorrow chart data\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 720,
        "wires": [
            [
                "75ac1831bb5e13e0",
                "117c2520b271ab18"
            ]
        ]
    },
    {
        "id": "64105c5a3b20bb19",
        "type": "function",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "Prepare today chart data",
        "func": "//*****************************************************************************\n//\n// File Name        : 'Node_Graf_Spot'\n// Title            : Node pro vypočet grafu\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 14-07-2024, 11:00\n// Revised          : 14-07-2024, 12:35\n// Version          : 1.11\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\n//definice globalních funkci\nconst removeSpacesAroundDots = global.get('removeSpacesAroundDots');\nconst sExtractTime = global.get('sExtractTime');\nconst sCounty_Code = global.get('sCounty_Code');\nconst sTZidentifier = global.get('sTZidentifier');\n\n\nif (removeSpacesAroundDots && sExtractTime && sCounty_Code && sTZidentifier) {\n    if(\"todayHourlyPrices\" in msg.payload) { \n        var line1 = [];\n        var line2 = [];\n        var currentTimeLine = [];\n        const currentTime = new Date();\n        const sDate = currentTime.toLocaleString(sCounty_Code, { timeZone: sTZidentifier }); // prida CZ lokaci\n        const oDate_CZ = sExtractTime(removeSpacesAroundDots(sDate)); // upravi stavajici objekt cas na prijatelnou podobu pro porovnavani\n\n        var spotTresholdPrice = global.get(\"spotTresholdPrice\");\n        var hourlyPrices = msg.payload.todayHourlyPrices;\n        var currPrice = hourlyPrices[oDate_CZ.getHours()];\n        var minPrice = Math.min(...hourlyPrices);\n        var maxPrice = Math.max(...hourlyPrices);\n\n        for(var i=0; i<24;)\n        {\n            // spot price\n            line1[i] = { \"x\": new Date(oDate_CZ.setUTCHours(i,0,0)), \"y\": hourlyPrices[i] };\n            // spot treshold\n            line2[i] = { \"x\": new Date(oDate_CZ.setUTCHours(i,0,0)), \"y\": spotTresholdPrice };\n\n            if (debug){\n            //   node.warn(\"oDate_CZ: \" + oDate_CZ);\n            //   node.warn(\"i: \" + i);\n            //   node.warn(\"hourlyPrices[i] : \" + hourlyPrices[i] );\n            }\n            i++;\n        }   \n        // add one more point to finish chart line\n        line1[24] = { \"x\": new Date(oDate_CZ.setUTCHours(23,59,59)), \"y\": hourlyPrices[23] };\n        line2[24] = { \"x\": new Date(oDate_CZ.setUTCHours(23,59,59)), \"y\": spotTresholdPrice };\n            \n\n        // Získání časového posunu mezi lokálním časem a UTC v minutách\n        // Výpočet časového posunu v hodinách: Použitím metody getTimezoneOffset na aktuálním datu currentTime zjistíme časový posun mezi \n        // lokálním časem a UTC. Tento posun je v minutách, takže jej převedeme na hodiny a násobíme -1, abychom získali obrácený posun.\n        // Úprava aktuálního času: K aktuálnímu času currentTime přičítáme(nebo odečítáme) časový posun v \n        // milisekundách(timezoneOffsetHours * 60 * 60 * 1000), abychom získali čas v UTC.\n        var timezoneOffsetHours = -currentTime.getTimezoneOffset() / 60;\n        var adjustedCurrentTime = new Date(currentTime.getTime() + timezoneOffsetHours * 60 * 60 * 1000);\n\n        if (debug) {\n            node.warn(\"adjustedCurrentTime: \" + adjustedCurrentTime);\n            node.warn(\"sDate: \" + sDate);\n            node.warn(\"currPrice: \" + currPrice);\n            node.warn(\"Časový posun (hodin): \" + timezoneOffsetHours);\n        }\n\n        // current time line marker\n        // Řádky currentTimeLine[0], currentTimeLine[1] a currentTimeLine[2] slouží k vytvoření čáry reprezentující aktuální čas na grafu. \n        // Tyto tři body určují pozici a výšku čáry:\n\n        // X: Aktuální čas(currentDate).\n        // Y: Aktuální cena(currPrice).\n        // Tímto bodem začíná čára na grafu na úrovni aktuální ceny.\n        currentTimeLine[0] = { \"x\": adjustedCurrentTime, \"y\": currPrice };\n        // X: Aktuální čas (currentDate).\n        // Y: Nejnižší cena dne nebo spotová prahová cena minus 0, 1.\n        // Tento bod určuje spodní část čáry, která se nachází těsně pod minimální cenou dne nebo pod spotovou prahovou cenou.\n        currentTimeLine[1] = { \"x\": adjustedCurrentTime, \"y\": ((minPrice < spotTresholdPrice) ? minPrice : spotTresholdPrice) - 0.1 };\n        // X: Aktuální čas (currentDate).\n        // Y: Nejvyšší cena dne nebo spotová prahová cena plus 0, 1.\n        // Tento bod určuje horní část čáry, která se nachází těsně nad maximální cenou dne nebo nad spotovou prahovou cenou.\n        currentTimeLine[2] = { \"x\": adjustedCurrentTime, \"y\": ((maxPrice > spotTresholdPrice) ? maxPrice : spotTresholdPrice) + 0.1 };\n\n\n        msg.payload = [{\n            \"series\": [\"Kč/kWh\", \"Spot limit\", \"Aktuálně\"],\n            \"data\": [line1, line2, currentTimeLine]\n        }];\n        \n        msg.minmax = minPrice.toFixed(2) + \" | \" + maxPrice.toFixed(2);\n    }\n    else{// clear chart data to reset, data not available\n        msg.payload = [];\n    }\n} else {// nenalezeny globalni funkce\n    node.error(\"Globální funkce nebyly nalezeny. <-- FORM SPOT GRAF -- Prepare today chart data\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 680,
        "wires": [
            [
                "13ea6ca0b9ca3e03",
                "a434319c79a45492"
            ]
        ]
    },
    {
        "id": "75ac1831bb5e13e0",
        "type": "ui_chart",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "",
        "group": "7d718c13f8419912",
        "order": 5,
        "width": 6,
        "height": 6,
        "label": "Zítřejší SPOT",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH",
        "interpolate": "step",
        "nodata": "- nedostupná data -",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#04cece",
            "#aaff55",
            "#17e6f7",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "Kulati_Dole",
        "x": 1620,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "a7a9fcb365020e85",
        "type": "switch",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "hCurrentPrice",
        "property": "payload.hCurrentPrice",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1240,
        "y": 920,
        "wires": [
            [
                "76540fe7bea2088e"
            ],
            [
                "b70c9a8e3f33594d"
            ]
        ]
    },
    {
        "id": "76a8d8c71ef25fc8",
        "type": "catch",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "",
        "scope": [
            "2d331a50b0d61710",
            "d153678c838836aa"
        ],
        "uncaught": false,
        "x": 930,
        "y": 540,
        "wires": [
            [
                "5ce3d905b124c09d",
                "f96e7d2a877f8124",
                "9679043aa5a0ea06"
            ]
        ]
    },
    {
        "id": "5ce3d905b124c09d",
        "type": "function",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "Reset chart data",
        "func": "// reset chart data\nmsg.minmax = \"---\";\nmsg.payload = [];\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 620,
        "wires": [
            [
                "75ac1831bb5e13e0",
                "a434319c79a45492",
                "117c2520b271ab18",
                "13ea6ca0b9ca3e03"
            ]
        ]
    },
    {
        "id": "f96e7d2a877f8124",
        "type": "function",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "Reset data",
        "func": "// reset data\nmsg.fcolor = \"grey\";\nmsg.enabled = flow.get(\"isSpotAutoCtrlEnabled\");\nmsg.payload = {\"currentPrice\": \"---\"};\n    \nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 500,
        "wires": [
            [
                "e418a527df65e767"
            ]
        ]
    },
    {
        "id": "7a2eeb482b9cbe62",
        "type": "ui_numeric",
        "z": "b986d298710d9da5",
        "g": "f5e086d890235524",
        "name": "",
        "label": "Limitní cena",
        "tooltip": "",
        "group": "6bdf3420903b72e3",
        "order": 5,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value | number:2}} Kč/kWh",
        "min": "-100",
        "max": "100",
        "step": "0.01",
        "className": "Input_LimitCena",
        "x": 1230,
        "y": 300,
        "wires": [
            [
                "1ae91cfd06369250",
                "7bc4dfa8ac9f0cb2"
            ]
        ]
    },
    {
        "id": "1ae91cfd06369250",
        "type": "change",
        "z": "b986d298710d9da5",
        "g": "f5e086d890235524",
        "name": "Set spotTresholdPrice",
        "rules": [
            {
                "t": "set",
                "p": "spotTresholdPrice",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "spotTresholdPrice",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 300,
        "wires": [
            [
                "2d331a50b0d61710"
            ]
        ]
    },
    {
        "id": "a434319c79a45492",
        "type": "ui_text",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "group": "7d718c13f8419912",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "Today Min/Max",
        "label": "Dnes:  Min / Max",
        "format": "{{msg.minmax}} Kč/kWh",
        "layout": "row-left",
        "className": "Kulati_Nahore",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1620,
        "y": 620,
        "wires": []
    },
    {
        "id": "117c2520b271ab18",
        "type": "ui_text",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "group": "7d718c13f8419912",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "Tomorrow Min/Max",
        "label": "Zítra:  Min / Max",
        "format": "{{msg.minmax}} Kč/kWh",
        "layout": "row-spread",
        "className": "Kulati_Nahore",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1630,
        "y": 720,
        "wires": []
    },
    {
        "id": "9679043aa5a0ea06",
        "type": "debug",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "Http error - reset UI data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1190,
        "y": 540,
        "wires": []
    },
    {
        "id": "676afd925d5b648d",
        "type": "function",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "Setup charts ui options",
        "func": "/* \n    Format charts - axes, units, colors, etc...\n*/    \n\nmsg.ui_control = {\n    options: {\n        legend: {\n            display: true\n        },\n        scales: {\n            xAxes: [{\n                type: 'time',\n                time: {\n                    unit: 'hour',\n                    unitStepSize: 2,\n                    displayFormats: {\n                        hour: 'HH',\n                    }\n                },\n                position:'bottom',\n                gridLines:{\n                    color:'rgba(70, 70, 70, 0.5)',\n                    zeroLineColor: 'rgba(70, 70, 70, 0.75)'\n                }\n            }],\n            yAxes: [{\n                gridLines:{\n                    color:'rgba(70, 70, 70, 0.5)',\n                    zeroLineColor: 'rgba(125, 125, 125, 0.75)'\n                }\n            }]\n       }\n       \n    }\n}\n\ndelete msg.payload\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "7d7464fe9484e0f6",
        "type": "inject",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "Init call",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 800,
        "wires": [
            [
                "676afd925d5b648d"
            ]
        ]
    },
    {
        "id": "908261638ccf1e55",
        "type": "change",
        "z": "b986d298710d9da5",
        "g": "f5e086d890235524",
        "name": "Set UI",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "spotTresholdPrice",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "isSpotAutoCtrlEnabled",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 300,
        "wires": [
            [
                "7a2eeb482b9cbe62"
            ]
        ]
    },
    {
        "id": "bf176b832b69029b",
        "type": "modbus-read",
        "z": "b986d298710d9da5",
        "g": "5ece208427d51524",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "100",
        "dataType": "HoldingRegister",
        "adr": "2707",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "5e730295abd379ae",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 750,
        "y": 80,
        "wires": [
            [
                "d4ef1b7263f1f0c7"
            ],
            [
                "16d87f0ccdd6c314"
            ]
        ]
    },
    {
        "id": "f4e1cf3a0ee52e37",
        "type": "ui_switch",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "",
        "label": "Přetoky: Zap / Vyp",
        "tooltip": "",
        "group": "6bdf3420903b72e3",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "payload",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "Kulati_Dole",
        "x": 1410,
        "y": 1000,
        "wires": [
            [
                "5fa9a82ebed3552f"
            ]
        ]
    },
    {
        "id": "16d87f0ccdd6c314",
        "type": "modbus-response",
        "z": "b986d298710d9da5",
        "g": "5ece208427d51524",
        "name": "",
        "registerShowMax": "5",
        "x": 950,
        "y": 140,
        "wires": []
    },
    {
        "id": "85e88bf9b09d69e4",
        "type": "cronplus",
        "z": "b986d298710d9da5",
        "name": "Each 15 min",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "Schedule 1",
                "topic": "Tick each 15min",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */15 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 90,
        "y": 680,
        "wires": [
            [
                "c5864e157a733b8f"
            ]
        ]
    },
    {
        "id": "b1d0b2f4a481604a",
        "type": "config",
        "z": "b986d298710d9da5",
        "name": "Config",
        "properties": [
            {
                "p": "spotTresholdPrice",
                "pt": "flow",
                "to": "1.04",
                "tot": "num"
            },
            {
                "p": "isSpotAutoCtrlEnabled",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            },
            {
                "p": "nGridConsumptionEnable",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "active": true,
        "x": 290,
        "y": 220,
        "wires": []
    },
    {
        "id": "f7b462f22622136e",
        "type": "function",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "Logick write register 2707",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A\n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 14-07-2024, 20:40\n// Revised          : 15-07-2024, 21:35\n// Version          : 1.01\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\n// Function to handle errors\nvar errorMessage = msg.error;\n\nconst isSpotAutoCtrlEnabled = global.get('isSpotAutoCtrlEnabled');\nconst spotTresholdPrice = global.get('spotTresholdPrice');\nlet nSpot = 0;\nlet swOnOff = 0;\n\nif (typeof msg.payload === 'object' && \"currentPrice\" in msg.payload) {\n\n    const currentPrice = msg.payload.currentPrice;\n    const todayHourlyPrices = msg.payload.todayHourlyPrices;\n    // Ulozeni dat do globalnich promennych, ktere jsou dostupne mezi flow\n    global.set(\"currentPrice\", currentPrice);\n    global.set(\"todayHourlyPrices\", todayHourlyPrices);\n\n    if (isSpotAutoCtrlEnabled) {\n        if (currentPrice < spotTresholdPrice) {\n            nSpot = 0;\n            swOnOff = 0;\n        } else if (currentPrice >= spotTresholdPrice) {\n            nSpot = 1;\n            swOnOff = 1;\n        }\n        // Nastavit vystup\n        msg.payload = {\n            \"nSpot\": nSpot,\n            \"currentPrice\": currentPrice,\n            \"hCurrentPrice\": 1,\n            \"swOnOff\": swOnOff,\n            \"isSpotAutoCtrlEnabled\": isSpotAutoCtrlEnabled,\n            \"spotTresholdPrice\": spotTresholdPrice\n        };\n        if (debug) {\n            node.warn(\"currentPrice: \" + currentPrice);\n            node.warn(\"spotTresholdPrice: \" + spotTresholdPrice);\n            node.warn(\"nSpot: \" + nSpot);\n        }\n    } else { //obsluha chyby\n        msg.payload = hErrorHandle();\n    }\n} else { //obsluha chyby\n    msg.payload = hErrorHandle();\n}\nreturn msg;\n\nfunction hErrorHandle() {\n    // You can customize your error handling logic here\n    var errorPayload = {\n        \"hCurrentPrice\": 0,\n    };\n\n    // Log the error if debugging is enabled\n    if (debug && errorMessage) {\n        node.warn(\"Error caught: \" + errorMessage.toString());\n    }\n\n    return errorPayload;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 960,
        "wires": [
            [
                "5ea652330077301c",
                "05f5f0a1cc1ee777",
                "fb235672515d3eae",
                "38b7ec7ee777b4a9",
                "e20437d8bba5aa5e",
                "a7a9fcb365020e85",
                "b759b4c02def5194",
                "b4b6f64ea3924b4e"
            ]
        ]
    },
    {
        "id": "5ea652330077301c",
        "type": "debug",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "currentPrice",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.currentPrice",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1230,
        "y": 1180,
        "wires": []
    },
    {
        "id": "fb235672515d3eae",
        "type": "debug",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "nSpot",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.nSpot",
        "targetType": "msg",
        "statusVal": "payload.nSpot",
        "statusType": "auto",
        "x": 1210,
        "y": 1240,
        "wires": []
    },
    {
        "id": "05f5f0a1cc1ee777",
        "type": "debug",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "spotTresholdPrice",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.spotTresholdPrice",
        "targetType": "msg",
        "statusVal": "payload.spotTresholdPrice",
        "statusType": "auto",
        "x": 1250,
        "y": 1120,
        "wires": []
    },
    {
        "id": "7b7b2d74db0945e8",
        "type": "change",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "Convert_msg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.nSpot",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 1020,
        "wires": [
            []
        ],
        "info": "Předani dat do globalnich promennych"
    },
    {
        "id": "5fa9a82ebed3552f",
        "type": "modbus-write",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "100",
        "dataType": "HoldingRegister",
        "adr": "2707",
        "quantity": "1",
        "server": "5e730295abd379ae",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1680,
        "y": 960,
        "wires": [
            [],
            [
                "96deeb8958d5a03f"
            ]
        ]
    },
    {
        "id": "96deeb8958d5a03f",
        "type": "modbus-response",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "",
        "registerShowMax": "5",
        "x": 1890,
        "y": 1000,
        "wires": []
    },
    {
        "id": "38b7ec7ee777b4a9",
        "type": "change",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "Convert_msg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.swOnOff",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 1000,
        "wires": [
            [
                "f4e1cf3a0ee52e37"
            ]
        ],
        "info": "Předani dat do globalnich promennych"
    },
    {
        "id": "7bc4dfa8ac9f0cb2",
        "type": "debug",
        "z": "b986d298710d9da5",
        "g": "f5e086d890235524",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1400,
        "y": 240,
        "wires": []
    },
    {
        "id": "e20437d8bba5aa5e",
        "type": "debug",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "isSpotAutoCtrlEnabled",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.isSpotAutoCtrlEnabled",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1260,
        "y": 1060,
        "wires": []
    },
    {
        "id": "b759b4c02def5194",
        "type": "debug",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "hCurrentPrice",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.hCurrentPrice",
        "targetType": "msg",
        "statusVal": "payload.spotTresholdPrice",
        "statusType": "auto",
        "x": 1240,
        "y": 860,
        "wires": []
    },
    {
        "id": "cf6ec63e9e803b5c",
        "type": "debug",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "Text",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1650,
        "y": 820,
        "wires": []
    },
    {
        "id": "b4b6f64ea3924b4e",
        "type": "function",
        "z": "b986d298710d9da5",
        "g": "b42fb09a89761abc",
        "name": "CopyOnChange_2707",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A\n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 16-07-2024, 04:40\n// Revised          : 16-07-2024, 16:01\n// Version          : 1.00\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\n// Získat poslední odeslanou hodnotu z kontextu\nlet nCopyOnChange2707 = context.get('nCopyOnChange2707');\n\n//Načtení vstupních dat\nlet nCopyOnChange = parseFloat(msg.payload.nSpot) || 0;\n\n// Porovnat aktuální hodnotu s poslední odeslanou hodnotou\nif (nCopyOnChange !== nCopyOnChange2707) {\n\n    // Hodnota se změnila, uložit novou hodnotu do kontextu\n    context.set('nCopyOnChange2707', nCopyOnChange);\n\n    msg.payload = nCopyOnChange; // Odeslat zprávu\n    return msg;\n    \n} else {// Hodnota je stejná, neodeslat zprávu\n    return null; // Vrátit null, aby zpráva nebyla odeslána\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 960,
        "wires": [
            [
                "5fa9a82ebed3552f"
            ]
        ]
    },
    {
        "id": "7f7c294712a3580b",
        "type": "ui_text",
        "z": "dc14bd796219d9ad",
        "group": "eff8c2fb7917b0ab",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "L1",
        "format": "<font color={{fcolor}}>{{msg.payload.phase1}} W",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "11",
        "color": "#ffffff",
        "x": 1170,
        "y": 340,
        "wires": []
    },
    {
        "id": "03042c98ed1f8bd2",
        "type": "ui_text",
        "z": "dc14bd796219d9ad",
        "group": "eff8c2fb7917b0ab",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "L2",
        "format": "<font color={{fcolor}}>{{msg.payload.phase2}} W",
        "layout": "row-spread",
        "className": "zakazano",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1170,
        "y": 380,
        "wires": []
    },
    {
        "id": "47bee02fd17241cc",
        "type": "ui_text",
        "z": "dc14bd796219d9ad",
        "group": "eff8c2fb7917b0ab",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "L3",
        "format": "<font color={{fcolor}}>{{msg.payload.phase3}} W",
        "layout": "row-spread",
        "className": "Kulati_Dole",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1170,
        "y": 420,
        "wires": []
    },
    {
        "id": "3012d4563c8a76e7",
        "type": "ui_text",
        "z": "dc14bd796219d9ad",
        "group": "eff8c2fb7917b0ab",
        "order": 8,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "L1",
        "format": "<font color={{fcolor}}>{{msg.payload.grid1}} W",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1170,
        "y": 520,
        "wires": []
    },
    {
        "id": "f901c314b54b444a",
        "type": "ui_text",
        "z": "dc14bd796219d9ad",
        "group": "eff8c2fb7917b0ab",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "L2",
        "format": "<font color={{fcolor}}>{{msg.payload.grid2}} W",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1170,
        "y": 560,
        "wires": []
    },
    {
        "id": "ecd21f6cd73a0f64",
        "type": "ui_text",
        "z": "dc14bd796219d9ad",
        "group": "eff8c2fb7917b0ab",
        "order": 10,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "L3",
        "format": "<font color={{fcolor}}>{{msg.payload.grid3}} W",
        "layout": "row-spread",
        "className": "Kulati_Dole",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1170,
        "y": 600,
        "wires": []
    },
    {
        "id": "80350a39c69e782f",
        "type": "ui_text",
        "z": "dc14bd796219d9ad",
        "group": "eff8c2fb7917b0ab",
        "order": 13,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Baterie",
        "format": "<font color={{fcolor}}>{{msg.payload.nBattery_State_Charge}} %",
        "layout": "row-spread",
        "className": "Kulati_Nahore",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1180,
        "y": 660,
        "wires": []
    },
    {
        "id": "87d5cf8d58679897",
        "type": "ui_text",
        "z": "dc14bd796219d9ad",
        "group": "eff8c2fb7917b0ab",
        "order": 17,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "FW regulatory",
        "format": "<font color={{fcolor}}>{{msg.payload}} W",
        "layout": "row-spread",
        "className": "Kulati_Dole",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1200,
        "y": 820,
        "wires": []
    },
    {
        "id": "881b340c53404d98",
        "type": "function",
        "z": "dc14bd796219d9ad",
        "name": "Set AC OUT UI",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A\n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 21-10-2023, 11:00\n// Revised          : 06-07-2024, 10:27\n// Version          : 1.0\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\nlet phase1 = global.get('phase1') || 0;\nlet phase2 = global.get('phase2') || 0;\nlet phase3 = global.get('phase3') || 0;\n\nlet total = phase1 + phase2 + phase3;\n\nmsg.payload = { phase1, phase2, phase3, total };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 340,
        "wires": [
            [
                "7f7c294712a3580b",
                "03042c98ed1f8bd2",
                "47bee02fd17241cc",
                "e74ec256923af82c"
            ]
        ]
    },
    {
        "id": "ba02ecffa7282388",
        "type": "inject",
        "z": "dc14bd796219d9ad",
        "name": "Inject every second",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 660,
        "wires": [
            [
                "881b340c53404d98",
                "b7f5bd5a3eb90166",
                "33af33642fa0d5a2",
                "fe1d5acc45c21435",
                "79aa433d75f5c77d",
                "4fd0e3b86bad2c09",
                "382fa935783c989a",
                "9aa2e20d1b0d31a8"
            ]
        ]
    },
    {
        "id": "b7f5bd5a3eb90166",
        "type": "function",
        "z": "dc14bd796219d9ad",
        "name": "Set Label1",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A\n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 21-10-2023, 11:00\n// Revised          : 06-07-2024, 10:27\n// Version          : 1.2\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\n//definice globalních funkci\nconst nConvertSignetUnsignet = global.get('nConvertSignetUnsignet');\n\nif (nConvertSignetUnsignet) {\n        \n        // Skalovací faktor\n        var scaleFactor = 10; \n\n        const nBattery_State_Charge = global.get(\"nBattery_State_Charge\")|| 0;\n        let nBattery_Power = global.get(\"nBattery_Power\") || 0;\n        let nBattery_Current = global.get(\"nBattery_Current\") || 0;\n        let nBattery_Voltage = global.get(\"nBattery_Voltage\") || 0;\n\n        nBattery_Current = nConvertSignetUnsignet(nBattery_Current);\n        nBattery_Voltage = nConvertSignetUnsignet(nBattery_Voltage);\n        nBattery_Power = nConvertSignetUnsignet(nBattery_Power);\n\n        msg.power = \"Baterie Idle\";\n        msg.current = \"Baterie Idle\";\n        if (nBattery_Power > 0) {\n                msg.power = \"Nabíjení baterie\";\n        }\n        if (nBattery_Power < 0) {\n                msg.power = \"Vybíjení baterie\";\n        }\n\n        if (nBattery_Current > 0) {\n                msg.current = \"Nabíjecí proud baterie\";\n        }\n        if (nBattery_Current < 0) {\n                msg.current = \"Vybíjecí proud baterie\";\n        }\n\n        nBattery_Current = nBattery_Current / scaleFactor;\n        nBattery_Voltage = nBattery_Voltage / scaleFactor;\n       \n        msg.payload = { nBattery_State_Charge, nBattery_Power, nBattery_Current , nBattery_Voltage };\n    } else {\n    node.error(\"Globální funkce nebyly nalezeny. <- FORM GUI -- Set Label1\");\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 660,
        "wires": [
            [
                "80350a39c69e782f",
                "e7abeb99abbcadac",
                "440fdfb71d3c952e",
                "f85e8528950ff714"
            ]
        ]
    },
    {
        "id": "33af33642fa0d5a2",
        "type": "function",
        "z": "dc14bd796219d9ad",
        "name": "Set Label",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A\n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 21-10-2023, 11:00\n// Revised          : 06-07-2024, 10:27\n// Version          : 1.0\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\nlet a = global.get(\"pvPower\")|| 0;\nmsg.payload = a;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 820,
        "wires": [
            [
                "87d5cf8d58679897"
            ]
        ]
    },
    {
        "id": "e74ec256923af82c",
        "type": "ui_text",
        "z": "dc14bd796219d9ad",
        "group": "eff8c2fb7917b0ab",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Total AC zátěž",
        "format": "<font color={{fcolor}}>{{msg.payload.total}} W",
        "layout": "row-spread",
        "className": "Kulati_Nahore",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#ffbb00",
        "x": 1200,
        "y": 300,
        "wires": []
    },
    {
        "id": "fe1d5acc45c21435",
        "type": "function",
        "z": "dc14bd796219d9ad",
        "name": "Set GRID UI",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A\n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 21-10-2023, 11:00\n// Revised          : 06-07-2024, 10:27\n// Version          : 1.0\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\nlet grid1 = global.get('grid1') || 0;\nlet grid2 = global.get('grid2') || 0;\nlet grid3 = global.get('grid3') || 0;\n\nlet total = grid1 + grid2 + grid3;\n\nmsg.payload = { grid1, grid2, grid3, total };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 520,
        "wires": [
            [
                "ecd21f6cd73a0f64",
                "f901c314b54b444a",
                "3012d4563c8a76e7",
                "be54171f553bba4a"
            ]
        ]
    },
    {
        "id": "be54171f553bba4a",
        "type": "ui_text",
        "z": "dc14bd796219d9ad",
        "group": "eff8c2fb7917b0ab",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Total Síť",
        "format": "<font color={{fcolor}}>{{msg.payload.total}} W",
        "layout": "row-spread",
        "className": "Kulati_Nahore",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#ffbb00",
        "x": 1180,
        "y": 480,
        "wires": []
    },
    {
        "id": "909f0fa3f4147ede",
        "type": "ui_template",
        "z": "dc14bd796219d9ad",
        "group": "6bdf3420903b72e3",
        "name": "Dashboard Theme : Modern Dark",
        "order": 6,
        "width": 6,
        "height": 1,
        "format": "<style>\n    :root {\n        --accent: red;\n        --background-color: #3c3c3c;    /* pozadi v kartach a mezerach */\n        --background: #2e2d2d;          /* pozadi pod LABELem */\n        --barva-textu: #cccbc8;         /* barva textu */\n        --color_border: #004f4b;\n        --color_ind_on: #32cd32;        /*barva indicator fan zalena - on */\n        --color_ind_off: grey;        /*barva indicator fan seda - OFF */\n        --font-family: Arial, Helvetica, sans-serif;\n        --margin: 0;\n        --menu-background: #ffffff;\n        --menu-color: #111111;\n        --okraj-karty: #504f4b;         /* barva okraje karty */\n        --on-background: #4790d0;\n        --on-primary: #faf9f5;\n        --on-surface: #faf9f5;\n        --padding: 0;\n        --primary: var(--nr-dashboard-widgetColor);\n        --radius-s: 9px;                /* hodnota zakulaceni okraju, pokud je funkce povolene */\n        --secondary: var(--nr-dashboard-groupTextColor);\n        --surface: #373737; //zahlavi a pozadi zmenovych inputu se sipkama nahotu a dolu\n        --inputs: red; //zahlavi a pozadi zmenovych inputu se sipkama nahotu a dolu\n        /* další proměnné dle potřeby */\n    }\n\n    body {\n        background-color: var(--background-color);\n        color: var(--barva-textu);\n        font-family: var(--font-family);\n        margin: var(--margin);\n        padding: var(--padding);\n    }\n\n    body.nr-dashboard-theme {\n        background-color: var(--background);\n        font-family: var(--font-family);\n    }\n\n    body.nr-dashboard-theme md-content md-card {\n        background-color: var(--background-color);\n        color: var(--barva-textu);\n    }\n\n    body.nr-dashboard-theme md-sidenav {\n        background-color: var(--surface);\n    }\n\n    body.nr-dashboard-theme md-toolbar {\n        background-color: var(--surface);\n    }\n\n    /* Calendar and Date picker */\n    .md-calendar,\n    .md-datepicker-calendar,\n    .md-default-theme .md-calendar,\n    .md-default-theme .md-datepicker-calendar {\n        background-color: var(--surface);\n        color: var(--on-surface);\n    }\n\n    .md-datepicker-calendar-pane,\n    .md-default-theme .md-datepicker-calendar-pane {\n        border: 0;\n    }\n\n    .md-datepicker-input,\n    .md-default-theme .md-datepicker-input,\n    .md-default-theme .md-calendar-month-label md-icon,\n    .md-datepicker-calendar-pane,\n    .md-default-theme .md-calendar-month-label md-icon {\n        color: var(--on-surface);\n    }\n\n    md-card,\n    md-card.md-default-theme {\n        border-radius: 0;\n        /* Zakulacení rohů odstraněno */\n    }\n\n    md-list-item .md-list-item-inner,\n    md-list-item._md-button-wrap>div.md-button:first-child {\n        background-color: var(--inputs);\n    }\n\n    /* Chart */\n    .nr-dashboard-theme .nr-dashboard-chart {\n        color: var(--on-surface);\n    }\n\n    .nr-dashboard-theme .nr-dashboard-chart-container {\n        color: var(--on-surface);\n    }\n\n    .nr-dashboard-theme .nr-dashboard-chart-title {\n        color: var(--on-surface);\n    }\n\n    /* Dropdown */\n    .nr-dashboard-theme .nr-dashboard-dropdown .md-select-icon {\n        color: var(--on-surface);\n    }\n\n    .nr-dashboard-theme .nr-dashboard-dropdown md-select .md-select-value,\n    .nr-dashboard-theme .nr-dashboard-dropdown md-select .md-select-value.md-select-placeholder {\n        color: var(--on-surface);\n    }\n\n    .nr-dashboard-theme md-select-menu,\n    .nr-dashboard-theme md-select-menu md-option {\n        background-color: var(--surface);\n        color: var(--on-surface);\n    }\n\n    .nr-dashboard-theme md-select-menu md-option[selected] {\n        background-color: var(--surface) !important;\n        color: #1bbfff !important;\n    }\n\n    /* Date picker */\n    .nr-dashboard-theme .nr-dashboard-date-picker md-input-container .md-input {\n        color: var(--on-surface);\n    }\n\n    .nr-dashboard-theme .nr-dashboard-date-picker .md-datepicker-triangle-button .md-datepicker-expand-triangle {\n        border-top-color: #1d85fc;\n    }\n\n    /* Zmenšení mezer mezi prvky */\n    .nr-dashboard-theme .nr-dashboard-text {\n        margin-bottom: 5px;\n        /* Zmenšení spodního okraje mezi texty */\n    }\n\n    .nr-dashboard-theme .nr-dashboard-button .md-button {\n        background-color: var(--primary);\n        color: var(--on-primary);\n        line-height: inherit;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n        background-color: var(--secondary);\n    }\n\n    .nr-dashboard-theme .nr-dashboard-button .md-button ui-icon {\n        margin-bottom: 8px;\n    }\n\n    .nr-dashboard-theme [ui-card-size=\"2x2\"].nr-dashboard-button .md-button {\n        align-items: center;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        white-space: pre-line;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-cardpanel {\n        margin: var(--margin);\n        padding: var(--padding);\n    }\n\n    .nr-dashboard-theme .nr-dashboard-date-picker md-input-container .md-input {\n        color: var(--on-surface);\n    }\n\n    .nr-dashboard-theme .nr-dashboard-gauge-titlel {\n        font-weight: var(--font-weight-l) !important;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-numeric .value {\n        background-color: var(--surface);\n        color: var(--on-surface);\n    }\n\n    .nr-dashboard-theme .nr-dashboard-template {\n        background-color: var(--surface);\n    }\n\n    .nr-dashboard-theme .nr-dashboard-textinput md-input-container.md-input-has-value label {\n        color: #5d5e5f;\n    }\n\n    .nr-dashboard-theme md-select-menu {\n        background-color: var(--surface);\n        color: var(--on-surface);\n    }\n\n    .nr-dashboard-theme md-menu-content {\n        background-color: var(--menu-background);\n        color: var(--menu-color);\n    }\n\n    .nr-dashboard-theme md-menu-content md-menu-item {\n        background-color: var(--menu-background);\n        color: var(--menu-color);\n    }\n\n    /* Kulatění rohů */\n    .Kulati_Dole {\n     //   border-bottom-left-radius: var(--radius-s);\n     //   border-bottom-right-radius: var(--radius-s);\n    }\n\n    .Kulati_Nahore {\n     //   border-top-left-radius: var(--radius-s);\n     //   border-top-right-radius: var(--radius-s);\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 200,
        "y": 40,
        "wires": [
            []
        ],
        "icon": "node-red-dashboard/ui_colour_picker.png",
        "info": "# Modern Dark Theme for node-red-dashboard\n\nInspired by Victor Lucachi with his [Node Red Dashboard Concept](https://dribbble.com/shots/10356530-Node-Red-Dashboard-Concept) on Dribbble. Thank you for your work.\n\n## Customize\n\n1. Go on dashboard customisation tab (At the right of Debug Console).\n2. Select the style `Dark`.\n3. Pick the color you want. Example `#66B5F8`\n\n## Buttons\n\nUse `2x2` size for buttons with icon and text on the screenshot"
    },
    {
        "id": "5dbba70ddd44d673",
        "type": "debug",
        "z": "dc14bd796219d9ad",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 300,
        "y": 100,
        "wires": []
    },
    {
        "id": "8f10bed02dbe3b9b",
        "type": "ui_template",
        "z": "dc14bd796219d9ad",
        "d": true,
        "group": "eff8c2fb7917b0ab",
        "name": "Linea_CCS",
        "order": 23,
        "width": 0,
        "height": 0,
        "format": "<style>\n    body {\n        --margin: 0;\n        --padding: 0;\n        --font-family: Arial, Helvetica, sans-serif;\n        --background-color: #3c3c3c;    // pozadi v kartach amererach\n        --background: #2e2d2d;          // pozadi pod LABELem\n        --color: #faf9f5;\n        --barva-textu: #cccbc8;         //barva textu \n        --color_border: #004f4b;\n        --on-background: #4790d0;\n        --on-surface: #faf9f5;\n        --on-primary: #faf9f5;\n        --surface: #373737;\n        --okraj-karty: #504f4b;         //barva okraje karty\n        --primary: var(--nr-dashboard-widgetColor);\n        --secondary: var(--nr-dashboard-groupTextColor);\n        --accent: red;\n        --radius-s: 9px;                //hodnota zakulaceni okraju, pokud je funkce povolene\n        //--nr-dashboard-widgetTextColor: var(--on-primary);\n    }\n\n    body.nr-dashboard-theme md-content md-card {\n        background-color: var(--background-color);\n        color: var(--barva-textu);\n    }\n\n    body.nr-dashboard-theme {\n        background-color: var(--background);\n        font-family: var(--font-family);\n    }\n\n    .nr-dashboard-theme .nr-dashboard-template {\n        background-color: var(--surface);\n    }\n\n    .nr-dashboard-theme ui-card-panel {\n        background-color: var(--background);\n        border: 2px solid var(--okraj-karty);      //nastaveni okraje karet\n    }\n\n    .nr-dashboard-theme .nr-dashboard-button .md-button {\n        background-color: var(--primary);\n        line-height: inherit;\n        color: var(--on-primary);\n    }\n\n    .nr-dashboard-theme [ui-card-size=\"2x2\"].nr-dashboard-button .md-button {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        white-space: pre-line;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-button .md-button ui-icon {\n        margin-bottom: 8px;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n        background-color: var(--secondary);\n    }\n\n    md-card.md-default-theme,\n    md-card {\n        //border-radius: 0; /* Zakulacení rohů odstraněno */\n    }\n\n    .nr-dashboard-theme .nr-dashboard-gauge-titlel {\n        font-weight: var(--font-weight-l) !important;\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        font-weight: var(--font-weight-l);\n        text-transform: capitalize;\n        color: var(--on-background);\n    }\n\n    .nr-dashboard-cardpanel>p {\n        margin-left: 0;\n        padding-left: 8px; /* Zmenšená výplň */\n    }\n\n    body.nr-dashboard-theme md-toolbar {\n        background-color: var(--surface);\n    }\n\n    /* Calendar and Date picker */\n    .md-default-theme .md-datepicker-calendar,\n    .md-datepicker-calendar,\n    .md-default-theme .md-calendar,\n    .md-calendar {\n        background-color: var(--surface);\n        color: var(--on-surface);\n    }\n\n    .md-default-theme .md-datepicker-calendar-pane,\n    .md-datepicker-calendar-pane {\n        border: 0;\n    }\n\n    .md-default-theme .md-calendar-month-label md-icon,\n    .md-calendar-month-label md-icon,\n    .md-default-theme .md-datepicker-input,\n    .md-datepicker-input {\n        color: var(--on-surface);\n    }\n\n    .nr-dashboard-theme .nr-dashboard-date-picker md-input-container .md-input {\n        color: var(--on-surface);\n    }\n\n    .nr-dashboard-theme .nr-dashboard-numeric .value {\n        background-color: var(--surface);\n        color: var(--on-surface);\n    }\n\n    .nr-dashboard-theme md-select-menu {\n        background-color: var(--surface);\n        color: var(--on-surface);\n    }\n\n    .nr-dashboard-textinput md-input-container .md-input,\n    .nr-dashboard-theme md-input-container.md-default-theme .md-input,\n    md-input-container .md-input {\n        color: var(--on-surface);\n    }\n\n    .nr-dashboard-theme .nr-dashboard-textinput md-input-container.md-input-has-value label {\n        color: #5d5e5f;\n    }\n\n    /* Dropdown */\n    .nr-dashboard-theme .nr-dashboard-dropdown md-select .md-select-value,\n    .nr-dashboard-theme .nr-dashboard-dropdown md-select .md-select-value.md-select-placeholder {\n        color: var(--on-surface);\n        //border-color: #1d85fc;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-dropdown .md-select-icon {\n        color: var(--on-surface);\n    }\n\n    .nr-dashboard-theme md-select-menu,\n    .nr-dashboard-theme md-select-menu md-option {\n        background-color: var(--surface);\n        color: var (--on-surface);\n    }\n\n    .nr-dashboard-theme md-select-menu md-option[selected] {\n        color: #1bbfff !important;\n        background-color: var(--surface) !important;\n    }\n\n    .nr-dashboard-theme md-menu-content {\n        background-color: #ffffff;\n        color: #111111;\n    }\n\n    .nr-dashboard-theme md-menu-content md-menu-item {\n        background-color: #ffffff;\n        color: #111111;\n    }\n\n    /* Date picker */\n    .nr-dashboard-theme .nr-dashboard-date-picker md-input-container .md-input {\n        color: var(--on-surface);\n        //border-color: #1d85fc;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-date-picker .md-datepicker-triangle-button .md-datepicker-expand-triangle {\n        border-top-color: #1d85fc;\n    }\n\n    body.nr-dashboard-theme md-sidenav {\n        background-color: var(--surface);\n    }\n\n    md-list-item._md-button-wrap>div.md-button:first-child,\n    md-list-item .md-list-item-inner {\n        background-color: var(--surface);\n    }\n\n    /* Chart */\n    .nr-dashboard-theme .nr-dashboard-chart-title {\n        color: var(--on-surface);\n        //border-color: #1d85fc;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-chart-container {\n        color: var(--on-surface);\n        //border-color: #1d85fc;\n    }\n\n    .nr-dashboard-theme .nr-dashboard-chart {\n        color: var(--on-surface);\n        //border-color: #1d85fc;\n    }\n\n    /* Kulatění rohů */\n    .Kulati_Nahore {\n       // border-top-left-radius: var(--radius-s);\n       // border-top-right-radius: var(--radius-s);\n    }\n\n    .Kulati_Dole {\n       // border-bottom-left-radius: var(--radius-s);\n       // border-bottom-right-radius: var(--radius-s);\n    }\n\n    /* Zmenšení mezer mezi prvky */\n    .nr-dashboard-theme .nr-dashboard-text {\n        margin-bottom: 5px; /* Zmenšení spodního okraje mezi texty */\n    }\n\n    /* Zmenšení okrajů a výplní karet */\n    .nr-dashboard-theme .nr-dashboard-cardpanel {\n        padding: 0px;\n        margin: 0px;\n    }\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "5dbba70ddd44d673"
            ]
        ]
    },
    {
        "id": "abaebf4fb42da20d",
        "type": "inject",
        "z": "dc14bd796219d9ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1280,
        "wires": [
            [
                "32304284005e3a7a",
                "4080d0d2033ca714",
                "3816c8e3dc0aa35f",
                "e2bcb2c3140e8715",
                "2b84c405a8fcc30a"
            ]
        ]
    },
    {
        "id": "e2bcb2c3140e8715",
        "type": "vrm-api",
        "z": "dc14bd796219d9ad",
        "vrm": "3ce9a078cfe7aa3e",
        "name": "",
        "api_type": "installations",
        "idUser": "",
        "users": "installations",
        "idSite": "274033",
        "installations": "stats",
        "attribute": "vrm_pv_charger_yield_fc",
        "stats_interval": "hours",
        "show_instance": false,
        "stats_start": "bod",
        "stats_end": "eod",
        "use_utc": false,
        "widgets": "EvChargerSummary",
        "instance": "",
        "vrm_id": "",
        "b_max": "",
        "tb_max": "",
        "fb_max": "",
        "tg_max": "",
        "fg_max": "",
        "b_cycle_cost": "",
        "buy_price_formula": "",
        "sell_price_formula": "",
        "green_mode_on": true,
        "feed_in_possible": true,
        "feed_in_control_on": true,
        "b_goal_hour": "",
        "b_goal_SOC": "",
        "store_in_global_context": false,
        "verbose": false,
        "x": 530,
        "y": 1200,
        "wires": [
            [
                "e86ffb9f1eb2f4ad"
            ]
        ]
    },
    {
        "id": "2823d9b0dfcce47f",
        "type": "ui_chart",
        "z": "dc14bd796219d9ad",
        "name": "",
        "group": "18637dcfe1e79007",
        "order": 2,
        "width": "20",
        "height": "12",
        "label": "Dnešní předpověd počasí",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#f7ab3e",
            "#fa717f",
            "#0084ff",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1230,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "9ddbec260baed1ae",
        "type": "debug",
        "z": "dc14bd796219d9ad",
        "name": "DATA_GRAF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1190,
        "y": 1280,
        "wires": []
    },
    {
        "id": "95b1ec484d912acd",
        "type": "function",
        "z": "dc14bd796219d9ad",
        "name": "Parse_DATA_graf",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A\n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 14-07-2024, 11:00\n// Revised          : 14-07-2024, 14:12\n// Version          : 1.1\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\n//definice globalních funkci\nconst removeSpacesAroundDots = global.get('removeSpacesAroundDots');\nconst sExtractTime = global.get('sExtractTime');\nconst sCounty_Code = global.get('sCounty_Code');\nconst sTZidentifier = global.get('sTZidentifier');\n\n\nif (removeSpacesAroundDots && sExtractTime && sCounty_Code && sTZidentifier) {\n    var series1 = [];\n    var series2 = [];\n    var series3 = [];\n    var labels = [];\n\n    //var date = new Date();\n    var date = new Date();\n    var sDate = date.toLocaleString(sCounty_Code, { timeZone: sTZidentifier });\n\n    var oDate_CZ = sExtractTime(removeSpacesAroundDots(sDate));\n\n    // Funkce pro nalezení správného klíče v záznamu\n    function findKey(record, key) {\n        return key in record ? record[key] : null;\n    }\n\n    // Iterace přes vstupní pole msg.payload\n    msg.payload.forEach(function(item) {\n        if (item.records) {\n            var hourlyData1 = findKey(item.records, \"vrm_pv_charger_yield_fc\");\n            var hourlyData2 = findKey(item.records, \"kwh\");\n            var hourlyData3 = findKey(item.records, \"solar_yield\");\n            \n            // Přiřazení dat do odpovídajících sérií\n\n            if (hourlyData1) {\n                for (var i = 0; i < hourlyData1.length; i++) {\n                    var value = parseFloat((hourlyData1[i][1] / 1000).toFixed(2)); //přepočet z W na kW\n                    if (i < series1.length) {\n                        series1[i] = value;\n                    } else {\n                        series1.push(value);\n                    }\n                }\n            }\n\n            if (hourlyData2) {\n                for (var i = 0; i < hourlyData2.length; i++) {\n                    var value = parseFloat(hourlyData2[i][1].toFixed(2)); //Data jsou v kW\n                    if (i < series2.length) {\n                        series2[i] = value;\n                    } else {\n                        series2.push(value);\n                    }\n                }\n            }\n\n            if (hourlyData3) {\n                for (var i = 0; i < hourlyData3.length; i++) {\n                    var value = parseFloat((hourlyData3[i][1] / 1000).toFixed(2)); //přepočet z W na kW\n                    if (i < series3.length) {\n                        series3[i] = value;\n                    } else {\n                        series3.push(value);\n                    }\n                }\n            }\n        }\n    });\n\n    // Generování popisků (labels) pouze pokud jsou prázdné\n    if (labels.length === 0) {\n        for (var i = 0; i < 24; i++) {\n            labels.push(`${i}:00`);\n        }\n    }\n\n    // Zajištění stejné délky všech sérií (naplnění null hodnotami)\n    while (series1.length < 24) series1.push(null);\n    while (series2.length < 24) series2.push(null);\n    while (series3.length < 24) series3.push(null);\n\n    // Vytvoření výstupního formátu\n    msg.payload = [{\n        \"series\": [\"FV výroba\", \"kwh\", \"Předpoved Vyroby\"],\n        \"data\": [series1, series2, series3],\n        \"labels\": labels\n    }];\n\n    } else {// nenalezeny globalni funkce\n        node.error(\"Globální funkce nebyly nalezeny. <-- FORM GUI -- Parse_DATA_graf\");\n    }\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1240,
        "wires": [
            [
                "9ddbec260baed1ae",
                "2823d9b0dfcce47f"
            ]
        ]
    },
    {
        "id": "3816c8e3dc0aa35f",
        "type": "vrm-api",
        "z": "dc14bd796219d9ad",
        "vrm": "3ce9a078cfe7aa3e",
        "name": "",
        "api_type": "installations",
        "idUser": "",
        "users": "installations",
        "idSite": "274033",
        "installations": "stats",
        "attribute": "kwh",
        "stats_interval": "hours",
        "show_instance": false,
        "stats_start": "bod",
        "stats_end": "eod",
        "use_utc": false,
        "widgets": "EvChargerSummary",
        "instance": "",
        "vrm_id": "",
        "b_max": "",
        "tb_max": "",
        "fb_max": "",
        "tg_max": "",
        "fg_max": "",
        "b_cycle_cost": "",
        "buy_price_formula": "",
        "sell_price_formula": "",
        "green_mode_on": true,
        "feed_in_possible": true,
        "feed_in_control_on": true,
        "b_goal_hour": "",
        "b_goal_SOC": "",
        "store_in_global_context": false,
        "verbose": false,
        "x": 590,
        "y": 1240,
        "wires": [
            [
                "e86ffb9f1eb2f4ad"
            ]
        ]
    },
    {
        "id": "4080d0d2033ca714",
        "type": "vrm-api",
        "z": "dc14bd796219d9ad",
        "vrm": "3ce9a078cfe7aa3e",
        "name": "",
        "api_type": "installations",
        "idUser": "",
        "users": "installations",
        "idSite": "274033",
        "installations": "stats",
        "attribute": "solar_yield",
        "stats_interval": "hours",
        "show_instance": false,
        "stats_start": "bod",
        "stats_end": "eod",
        "use_utc": false,
        "widgets": "EvChargerSummary",
        "instance": "",
        "vrm_id": "",
        "b_max": "",
        "tb_max": "",
        "fb_max": "",
        "tg_max": "",
        "fg_max": "",
        "b_cycle_cost": "",
        "buy_price_formula": "",
        "sell_price_formula": "",
        "green_mode_on": true,
        "feed_in_possible": true,
        "feed_in_control_on": true,
        "b_goal_hour": "",
        "b_goal_SOC": "",
        "store_in_global_context": false,
        "verbose": false,
        "x": 570,
        "y": 1280,
        "wires": [
            [
                "e86ffb9f1eb2f4ad"
            ]
        ]
    },
    {
        "id": "737969e5f9983f01",
        "type": "debug",
        "z": "dc14bd796219d9ad",
        "name": "POLE",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 990,
        "y": 1300,
        "wires": []
    },
    {
        "id": "e86ffb9f1eb2f4ad",
        "type": "join",
        "z": "dc14bd796219d9ad",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 810,
        "y": 1240,
        "wires": [
            [
                "95b1ec484d912acd",
                "737969e5f9983f01"
            ]
        ]
    },
    {
        "id": "32304284005e3a7a",
        "type": "vrm-api",
        "z": "dc14bd796219d9ad",
        "vrm": "3ce9a078cfe7aa3e",
        "name": "",
        "api_type": "installations",
        "idUser": "",
        "users": "installations",
        "idSite": "274033",
        "installations": "stats",
        "attribute": "kwh",
        "stats_interval": "hours",
        "show_instance": false,
        "stats_start": "0",
        "stats_end": "0",
        "use_utc": false,
        "widgets": "TempSummaryAndGraph",
        "instance": "",
        "vrm_id": "",
        "b_max": "",
        "tb_max": "",
        "fb_max": "",
        "tg_max": "",
        "fg_max": "",
        "b_cycle_cost": "",
        "buy_price_formula": "",
        "sell_price_formula": "",
        "green_mode_on": true,
        "feed_in_possible": true,
        "feed_in_control_on": true,
        "b_goal_hour": "",
        "b_goal_SOC": "",
        "store_in_global_context": false,
        "verbose": false,
        "x": 590,
        "y": 1360,
        "wires": [
            [
                "a75064beb78e1d92"
            ]
        ]
    },
    {
        "id": "a75064beb78e1d92",
        "type": "debug",
        "z": "dc14bd796219d9ad",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 820,
        "y": 1360,
        "wires": []
    },
    {
        "id": "e125373b24fcca21",
        "type": "ui_button",
        "z": "dc14bd796219d9ad",
        "name": "",
        "group": "18637dcfe1e79007",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 1200,
        "wires": [
            [
                "4080d0d2033ca714",
                "3816c8e3dc0aa35f",
                "e2bcb2c3140e8715"
            ]
        ]
    },
    {
        "id": "2b84c405a8fcc30a",
        "type": "debug",
        "z": "dc14bd796219d9ad",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 640,
        "y": 1400,
        "wires": []
    },
    {
        "id": "85170cc176fe9ecd",
        "type": "comment",
        "z": "dc14bd796219d9ad",
        "name": "https://nodered.org/docs/getting-started/docker",
        "info": "https://nodered.org/docs/getting-started/docker",
        "x": 550,
        "y": 40,
        "wires": []
    },
    {
        "id": "e7abeb99abbcadac",
        "type": "ui_text",
        "z": "dc14bd796219d9ad",
        "group": "eff8c2fb7917b0ab",
        "order": 14,
        "width": 6,
        "height": 1,
        "name": "Nabijeni baterie",
        "label": "{{msg.power}}",
        "format": "<font color={{fcolor}}>{{msg.payload.nBattery_Power}} W",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1200,
        "y": 700,
        "wires": []
    },
    {
        "id": "440fdfb71d3c952e",
        "type": "ui_text",
        "z": "dc14bd796219d9ad",
        "group": "eff8c2fb7917b0ab",
        "order": 15,
        "width": 6,
        "height": 1,
        "name": " Prout baterie",
        "label": "{{msg.current}}",
        "format": "<font color={{fcolor}}>{{msg.payload.nBattery_Current}} A",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 740,
        "wires": []
    },
    {
        "id": "f85e8528950ff714",
        "type": "ui_text",
        "z": "dc14bd796219d9ad",
        "group": "eff8c2fb7917b0ab",
        "order": 16,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Napětí baterie",
        "format": "<font color={{fcolor}}>{{msg.payload.nBattery_Voltage}} V",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1202,
        "y": 779,
        "wires": []
    },
    {
        "id": "eb2aebb66e80d341",
        "type": "function",
        "z": "dc14bd796219d9ad",
        "name": "** GLOBAL FUNCTION **",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A\n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 21-10-2023, 11:00\n// Revised          : 06-07-2024, 10:27\n// Version          : 1.0\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "//*****************************************************************************\n//\n// File Name        : 'GLOBAL_FUNCTION'\n// Title            : GLOBALNI FUNKCE\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 14-07-2024, 12:42\n// Revised          : 14-07-2024, 12:50\n// Version          : 1.00\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n//\n\n//Definice timezone and Country code\n//LIST CODES: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\nconst sCounty_Code =\"cs-CZ\";\nconst sTZidentifier = \"Europe/Prague\";\n\n//*****************************************************************************\n//\n\nglobal.set('removeSpacesAroundDots', function (inputString) {\n    return inputString.replace(/ \\. /g, '.').replace(/\\. /g, '.').replace(/ \\./g, '.');\n});\n\nglobal.set('sExtractTime', function (dateString) {\n    const hFixedDate = fSetFixedDate();\n    let parts = dateString.split(' ');\n    //let dateParts = parts[0].split('.');\n    let timeParts = parts[1].split(':');\n\n      let date = new Date(\n          hFixedDate.getFullYear(), // rok\n          hFixedDate.getMonth(), // měsíc (od 0 do 11)\n          hFixedDate.getDate(), // den\n          parseInt(timeParts[0], 10), // hodina\n          parseInt(timeParts[1], 10), // minuta\n          parseInt(timeParts[2], 10) // sekunda\n    );\n\n    return date;\n});\n\nglobal.set('mExtractTime',function mExtractTime(milliseconds) {\n        const hFixedDate = fSetFixedDate();\n        let date = new Date(milliseconds);\n\n    let oDate = new Date(\n        hFixedDate.getFullYear(), // rok\n        hFixedDate.getMonth(), // měsíc (od 0 do 11)\n        hFixedDate.getDate(), // den\n        date.getUTCHours(), // hodina\n        date.getUTCMinutes(), // minuta\n        date.getUTCSeconds(), // sekunda\n        0 // milisekunda\n    );\n    return oDate;\n});\n\nfunction fSetFixedDate(){\n    const hFIXDate = new Date();\n    let hFixedDate = new Date(\n        hFIXDate.getUTCFullYear(), // rok\n        hFIXDate.getUTCMonth(), // měsíc (od 0 do 11)\n        hFIXDate.getUTCDate(), // den\n        0, // hodina\n        0, // minuta\n        0, // sekunda\n        0 // milisekunda\n    );\n    return hFixedDate;\n}\n\n// Funkce pro generování URL\nglobal.set('fSendUrl',function fSendUrl(sIpAddress, nRelayNumber, sTurn) {\n    return `http://${sIpAddress}/relay/${nRelayNumber}?turn=${sTurn}`;\n});\n\n// Convert Function Number Signet To Unsignet\nglobal.set('nConvertSignetUnsignet',function nConvertSignetUnsignet(nNumber) {\n    if (nNumber > 32767) nNumber -= 65536; \n    return nNumber;\n});\n\n// Convert Function Number Unsignet To Signet\nglobal.set('nConvertUnsignetToSignet', function nConvertUnsignetToSignet(nNumber) {\n    if (nNumber < 0) nNumber += 65536;\n    return nNumber;\n});\n\nglobal.set('sCounty_Code', sCounty_Code);\nglobal.set('sTZidentifier', sTZidentifier);\n",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "79aa433d75f5c77d",
        "type": "ui_switch",
        "z": "dc14bd796219d9ad",
        "name": "Set Point SWITCH",
        "label": "Zap/Vyp AcPowerSetPoint",
        "tooltip": "",
        "group": "b1eb05edab318eb0",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "Switch_GridPoint",
        "x": 510,
        "y": 900,
        "wires": [
            [
                "0a50c9d25fc39f08"
            ]
        ],
        "info": "AcPowerSetPoint"
    },
    {
        "id": "0a50c9d25fc39f08",
        "type": "change",
        "z": "dc14bd796219d9ad",
        "name": "Set nGridConsumptionEnable",
        "rules": [
            {
                "t": "set",
                "p": "nGridConsumptionEnable",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 900,
        "wires": [
            [
                "7f96f3ed82eb5fbd"
            ]
        ]
    },
    {
        "id": "7f96f3ed82eb5fbd",
        "type": "change",
        "z": "dc14bd796219d9ad",
        "name": "Set UI",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "nGridConsumptionEnable",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "nSetGridValue",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 900,
        "wires": [
            [
                "a5313ad38ca271ce"
            ]
        ]
    },
    {
        "id": "a5313ad38ca271ce",
        "type": "ui_numeric",
        "z": "dc14bd796219d9ad",
        "name": "",
        "label": "AcPowerSetPoint",
        "tooltip": "",
        "group": "b1eb05edab318eb0",
        "order": 3,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value | number:0}} W",
        "min": "-1000",
        "max": "1000",
        "step": "10",
        "className": "Kulati_Dole",
        "x": 1210,
        "y": 900,
        "wires": [
            [
                "a48e043fba743c10"
            ]
        ]
    },
    {
        "id": "a48e043fba743c10",
        "type": "change",
        "z": "dc14bd796219d9ad",
        "name": "Set nGridValue",
        "rules": [
            {
                "t": "set",
                "p": "nSetGridValue",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "4fd0e3b86bad2c09",
        "type": "ui_switch",
        "z": "dc14bd796219d9ad",
        "name": "delayCharging",
        "label": "Posunutí nabíjení Baterie",
        "tooltip": "",
        "group": "b1eb05edab318eb0",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "Kulati_Nahore",
        "x": 520,
        "y": 940,
        "wires": [
            [
                "9f144aca0de753b6"
            ]
        ]
    },
    {
        "id": "9f144aca0de753b6",
        "type": "change",
        "z": "dc14bd796219d9ad",
        "name": "Set switchDelayCharging",
        "rules": [
            {
                "t": "set",
                "p": "switchDelayCharging",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 940,
        "wires": [
            [
                "50be985d5cdf539d",
                "9fc9c0af9d89595f"
            ]
        ]
    },
    {
        "id": "871a86486ee9f688",
        "type": "ui_text_input",
        "z": "dc14bd796219d9ad",
        "name": "",
        "label": "Začate posunutí nabíjení baterie",
        "tooltip": "",
        "group": "b1eb05edab318eb0",
        "order": 6,
        "width": 6,
        "height": 2,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1250,
        "y": 940,
        "wires": [
            [
                "96e841478dc4bf1d"
            ]
        ]
    },
    {
        "id": "fc94735e37de1038",
        "type": "ui_text_input",
        "z": "dc14bd796219d9ad",
        "name": "",
        "label": "Konec posunutí nabíjení baterie",
        "tooltip": "",
        "group": "b1eb05edab318eb0",
        "order": 7,
        "width": 6,
        "height": 2,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": true,
        "className": "Kulati_Dole",
        "topicType": "msg",
        "x": 1250,
        "y": 980,
        "wires": [
            [
                "d91fe34ce03ae852"
            ]
        ]
    },
    {
        "id": "50be985d5cdf539d",
        "type": "change",
        "z": "dc14bd796219d9ad",
        "name": "Set UI",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "switchDelayCharging",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "tStartBattery",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 940,
        "wires": [
            [
                "871a86486ee9f688"
            ]
        ]
    },
    {
        "id": "9fc9c0af9d89595f",
        "type": "change",
        "z": "dc14bd796219d9ad",
        "name": "Set UI",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "switchDelayCharging",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "tStopBattery",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 980,
        "wires": [
            [
                "fc94735e37de1038"
            ]
        ]
    },
    {
        "id": "f8c0d72a161b9044",
        "type": "change",
        "z": "dc14bd796219d9ad",
        "name": "Set tStartBattery",
        "rules": [
            {
                "t": "set",
                "p": "tStartBattery",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 940,
        "wires": [
            [
                "befe99cc74adfbc1"
            ]
        ]
    },
    {
        "id": "4a8b938a68f03afc",
        "type": "change",
        "z": "dc14bd796219d9ad",
        "name": "Set tStopBattery",
        "rules": [
            {
                "t": "set",
                "p": "tStopBattery",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 980,
        "wires": [
            [
                "befe99cc74adfbc1"
            ]
        ]
    },
    {
        "id": "befe99cc74adfbc1",
        "type": "function",
        "z": "dc14bd796219d9ad",
        "name": "Control Set Time",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A\n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 14-07-2024, 11:00\n// Revised          : 14-07-2024, 13:56\n// Version          : 1.1\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\n//definice globalních funkci\nconst removeSpacesAroundDots = global.get('removeSpacesAroundDots');\nconst sExtractTime = global.get('sExtractTime');\nconst mExtractTime = global.get('mExtractTime');\nconst sCounty_Code = global.get('sCounty_Code');\nconst sTZidentifier = global.get('sTZidentifier');\n\n\nif (removeSpacesAroundDots && sExtractTime && sCounty_Code && sTZidentifier && mExtractTime) {\n    var tStartBattery = global.get('tStartBattery');\n    var tStopBattery = global.get('tStopBattery');\n\n    // Získejte aktuální čas ve správném časovém pásmu\n    var currentTime = new Date();\n    var sDate = currentTime.toLocaleString(sCounty_Code, { timeZone: sTZidentifier }); \n\n    // Převod aktuálního času na Date objekt\n    var oDate_CZ = sExtractTime(removeSpacesAroundDots(sDate));\n\n    // Převod časů začátku a konce na Date objekty\n    var tStartBatteryTime = mExtractTime(tStartBattery);\n    var tStopBatteryTime = mExtractTime(tStopBattery);\n\n    if (tStartBatteryTime && tStopBatteryTime) {\n        if (debug) {\n            node.warn(\"tStartBattery: \" + tStartBatteryTime);\n            node.warn(\"tStopBattery: \" + tStopBatteryTime);\n            node.warn(\"oDate_CZ: \" + oDate_CZ);\n        }\n        if (oDate_CZ >= tStartBatteryTime && oDate_CZ <= tStopBatteryTime) {\n            msg.payload = `Aktuální čas je v rozsahu (${tStartBatteryTime.toLocaleTimeString()} - ${tStopBatteryTime.toLocaleTimeString()}).`;\n        } else {\n            msg.payload = `Aktuální čas je mimo rozsah (${tStartBatteryTime.toLocaleTimeString()} - ${tStopBatteryTime.toLocaleTimeString()}).`;\n        }\n    } else {\n        msg.payload = 'Čas začátku nebo konce není nastaven.';\n    }\n    } else {\n    node.error(\"Globální funkce nebyly nalezeny. <- FORM GUI -- Control Set Time\");\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 960,
        "wires": [
            [
                "b3b1aee73fc70ea9"
            ]
        ]
    },
    {
        "id": "b3b1aee73fc70ea9",
        "type": "debug",
        "z": "dc14bd796219d9ad",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 2120,
        "y": 960,
        "wires": []
    },
    {
        "id": "382fa935783c989a",
        "type": "ui_switch",
        "z": "dc14bd796219d9ad",
        "name": "MorningPeakBatterySales",
        "label": "Prodej baterii - ranní špička",
        "tooltip": "",
        "group": "b1eb05edab318eb0",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "Kulati_Nahore",
        "x": 490,
        "y": 1020,
        "wires": [
            [
                "5aa7a07d461321e4"
            ]
        ]
    },
    {
        "id": "9aa2e20d1b0d31a8",
        "type": "ui_switch",
        "z": "dc14bd796219d9ad",
        "name": "EveningPeakBatterySales",
        "label": "Prodej baterii - večerní špička",
        "tooltip": "",
        "group": "b1eb05edab318eb0",
        "order": 12,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "Kulati_Nahore",
        "x": 490,
        "y": 1060,
        "wires": [
            [
                "35d9e730d3a59392"
            ]
        ]
    },
    {
        "id": "5aa7a07d461321e4",
        "type": "change",
        "z": "dc14bd796219d9ad",
        "name": "Set MorningPeakBatterySales",
        "rules": [
            {
                "t": "set",
                "p": "nMorningPeakBatterySales",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 1020,
        "wires": [
            [
                "09a6903bf341caa6"
            ]
        ]
    },
    {
        "id": "35d9e730d3a59392",
        "type": "change",
        "z": "dc14bd796219d9ad",
        "name": "Set EveningPeakBatterySales",
        "rules": [
            {
                "t": "set",
                "p": "nEveningPeakBatterySales",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 1060,
        "wires": [
            [
                "7523b8c2908ce577"
            ]
        ]
    },
    {
        "id": "09a6903bf341caa6",
        "type": "change",
        "z": "dc14bd796219d9ad",
        "name": "Set UI",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "nMorningPeakBatterySales",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "nMorningSOC_sales",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1020,
        "wires": [
            [
                "1bc725c7c8c31f6f"
            ]
        ]
    },
    {
        "id": "7523b8c2908ce577",
        "type": "change",
        "z": "dc14bd796219d9ad",
        "name": "Set UI",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "nEveningPeakBatterySales",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "nEveningSOC_sales",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1060,
        "wires": [
            [
                "4a750209e1c034d4"
            ]
        ]
    },
    {
        "id": "1bc725c7c8c31f6f",
        "type": "ui_numeric",
        "z": "dc14bd796219d9ad",
        "name": "",
        "label": "Prodej Rano do SOC",
        "tooltip": "",
        "group": "b1eb05edab318eb0",
        "order": 10,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value | number:0}} %",
        "min": "20",
        "max": "100",
        "step": "1",
        "className": "Kulati_Dole",
        "x": 1220,
        "y": 1020,
        "wires": [
            [
                "470199251b41d763"
            ]
        ]
    },
    {
        "id": "4a750209e1c034d4",
        "type": "ui_numeric",
        "z": "dc14bd796219d9ad",
        "name": "",
        "label": "Prodej Večer do SOC",
        "tooltip": "",
        "group": "b1eb05edab318eb0",
        "order": 13,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value | number:0}} %",
        "min": "20",
        "max": "100",
        "step": "1",
        "className": "Kulati_Dole",
        "x": 1220,
        "y": 1060,
        "wires": [
            [
                "5b761ba4691b6796"
            ]
        ]
    },
    {
        "id": "470199251b41d763",
        "type": "change",
        "z": "dc14bd796219d9ad",
        "name": "Set nMorningSOC_sales",
        "rules": [
            {
                "t": "set",
                "p": "nMorningSOC_sales",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "5b761ba4691b6796",
        "type": "change",
        "z": "dc14bd796219d9ad",
        "name": "Set nEveningSOC_sales",
        "rules": [
            {
                "t": "set",
                "p": "nEveningSOC_sales",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "96e841478dc4bf1d",
        "type": "function",
        "z": "dc14bd796219d9ad",
        "name": "Convert",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A\n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 14-07-2024, 11:00\n// Revised          : 14-07-2024, 11:08\n// Version          : 1.0\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\ntry {\n    // Input from time picker node\n    let inputTime = msg.payload;\n\n    // Log the received time if debug is enabled\n    if (debug) {\n        node.warn(\"Received time: \" + inputTime);\n    }\n\n    // Check if inputTime is a valid number\n    if (isNaN(inputTime)) {\n        node.error(\"Invalid time format: \" + inputTime);\n        return null;\n    }\n\n    // Convert the Unix timestamp to a Date object\n    let date = new Date(parseInt(inputTime));\n\n    // Log the constructed date object if debug is enabled\n    if (debug) {\n        node.warn(\"Constructed Date: \" + date);\n    }\n\n    // Check if the constructed date is valid\n    if (isNaN(date.getTime())) {\n        node.error(\"Constructed date is invalid.\");\n        return null;\n    }\n\n    // Convert the constructed date back to Unix timestamp\n    msg.payload = date.getTime();\n\n    // Return the message with the corrected time\n    return msg;\n} catch (error) {\n    node.error(\"Error: \" + error.message, msg);\n    return null; // Zastaví další zpracování, pokud dojde k chybě\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 940,
        "wires": [
            [
                "f8c0d72a161b9044"
            ]
        ]
    },
    {
        "id": "d91fe34ce03ae852",
        "type": "function",
        "z": "dc14bd796219d9ad",
        "name": "Convert",
        "func": "//*****************************************************************************\n//\n// File Name        : N/A\n// Title            : N/A\n// Author           : http://www.prochazka.zde.cz -> hacesoft 2024\n// Created          : 14-07-2024, 11:00\n// Revised          : 14-07-2024, 11:08\n// Version          : 1.0\n// Target Platform  : Node-RED\n//\n// This code is distributed under the GNU Public License\n// Všechny informace jsou zahrnuty pod GPL licenci, pokud není explicitně uveden jiný typ licence.\n// Používání těchto stránek a produktů ke komerčním účelům lze jen se souhlasem autora.\n// Všechna práva vyhrazena (c) 1997 - 2024 hacesoft.\n//\n//*****************************************************************************\n// Debugging flag\nconst debug = false;  // Nastavte na true pro zapnutí debug zpráv\n\ntry {\n    // Input from time picker node\n    let inputTime = msg.payload;\n\n    // Log the received time if debug is enabled\n    if (debug) {\n        node.warn(\"Received time: \" + inputTime);\n    }\n\n    // Check if inputTime is a valid number\n    if (isNaN(inputTime)) {\n        node.error(\"Invalid time format: \" + inputTime);\n        return null;\n    }\n\n    // Convert the Unix timestamp to a Date object\n    let date = new Date(parseInt(inputTime));\n\n    // Log the constructed date object if debug is enabled\n    if (debug) {\n        node.warn(\"Constructed Date: \" + date);\n    }\n\n    // Check if the constructed date is valid\n    if (isNaN(date.getTime())) {\n        node.error(\"Constructed date is invalid.\");\n        return null;\n    }\n\n    // Convert the constructed date back to Unix timestamp\n    msg.payload = date.getTime();\n\n    // Return the message with the corrected time\n    return msg;\n} catch (error) {\n    node.error(\"Error: \" + error.message, msg);\n    return null; // Zastaví další zpracování, pokud dojde k chybě\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 980,
        "wires": [
            [
                "4a8b938a68f03afc"
            ]
        ]
    }
]
